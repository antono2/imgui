@[translated]
module imgui

pub type Time_t = C.time_t
@[typedef]
pub struct C.time_t {}

pub type Tm = C.tm
@[typedef]
pub struct C.tm {}

// This file is automatically generated by generator.lua from https://github.com/cimgui/cimgui
// based on imgui.h file version "1.91.9b" 19191 from Dear ImGui https://github.com/ocornut/imgui
// with imgui_internal.h api
// with imgui_freetype.h api
// docking branch
// typedef unsigned long long ImU64;// CIMGUI_DEFINE_ENUMS_AND_STRUCTS
// CIMGUI_DEFINE_ENUMS_AND_STRUCTS
/////////////////////////hand written functions
// no LogTextV
// no appendfV
// for getting FLT_MAX in bindings
// for getting FLT_MIN in bindings
// CIMGUI_INCLUDED
// This file is automatically generated by generator.lua from https://github.com/cimgui/cimplot
// based on implot.h file version 0.17 from implot https://github.com/epezent/implot
// with implot_internal.h api


pub type ImVector_ImS16 = C.ImVector_ImS16
@[typedef]
struct C.ImVector_ImS16 {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImS16*/voidptr= unsafe{ nil }
}



pub type ImVector_ImS32 = C.ImVector_ImS32
@[typedef]
struct C.ImVector_ImS32 {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImS32*/voidptr= unsafe{ nil }
}



pub type ImVector_ImS64 = C.ImVector_ImS64
@[typedef]
struct C.ImVector_ImS64 {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImS64*/voidptr= unsafe{ nil }
}



pub type ImVector_ImS8 = C.ImVector_ImS8
@[typedef]
struct C.ImVector_ImS8 {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImS8*/voidptr= unsafe{ nil }
}



pub type ImVector_ImU64 = C.ImVector_ImU64
@[typedef]
struct C.ImVector_ImU64 {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImU64*/voidptr= unsafe{ nil }
}

type ImAxis = int
type ImPlotFlags = int
type ImPlotAxisFlags = int
type ImPlotSubplotFlags = int
type ImPlotLegendFlags = int
type ImPlotMouseTextFlags = int
type ImPlotDragToolFlags = int
type ImPlotColormapScaleFlags = int
type ImPlotItemFlags = int
type ImPlotLineFlags = int
type ImPlotScatterFlags = int
type ImPlotStairsFlags = int
type ImPlotShadedFlags = int
type ImPlotBarsFlags = int
type ImPlotBarGroupsFlags = int
type ImPlotErrorBarsFlags = int
type ImPlotStemsFlags = int
type ImPlotInfLinesFlags = int
type ImPlotPieChartFlags = int
type ImPlotHeatmapFlags = int
type ImPlotHistogramFlags = int
type ImPlotDigitalFlags = int
type ImPlotImageFlags = int
type ImPlotTextFlags = int
type ImPlotDummyFlags = int
type ImPlotCond = int
type ImPlotCol = int
type ImPlotStyleVar = int
type ImPlotScale = int
type ImPlotMarker = int
type ImPlotColormap = int
type ImPlotLocation = int
type ImPlotBin = int

enum ImAxis_ {
	x1 = 0
	x2
	x3
	y1
	y2
	y3
	count
}

enum ImPlotFlags_ {
 none          = 0
 no_title      = 1 << 0
 no_legend     = 1 << 1
 no_mouse_text = 1 << 2
 no_inputs     = 1 << 3
 no_menus      = 1 << 4
 no_box_select = 1 << 5
 no_frame      = 1 << 6
 equal         = 1 << 7
 crosshairs    = 1 << 8
 canvas_only   = 1 << 0 | 1 << 1 | 1 << 4 | 1 << 5 | 1 << 2
}

enum ImPlotAxisFlags_ {
 none           = 0
 no_label       = 1 << 0
 no_grid_lines  = 1 << 1
 no_tick_marks  = 1 << 2
 no_tick_labels = 1 << 3
 no_initial_fit = 1 << 4
 no_menus       = 1 << 5
 no_side_switch = 1 << 6
 no_highlight   = 1 << 7
 opposite       = 1 << 8
 foreground     = 1 << 9
 invert         = 1 << 10
 auto_fit       = 1 << 11
 range_fit      = 1 << 12
 pan_stretch    = 1 << 13
 lock_min       = 1 << 14
 lock_max       = 1 << 15
 lock           = 1 << 14 | 1 << 15
 no_decorations = 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3
 aux_default    = 1 << 1 | 1 << 8
}

enum ImPlotSubplotFlags_ {
 none        = 0
 no_title    = 1 << 0
 no_legend   = 1 << 1
 no_menus    = 1 << 2
 no_resize   = 1 << 3
 no_align    = 1 << 4
 share_items = 1 << 5
 link_rows   = 1 << 6
 link_cols   = 1 << 7
 link_all_x  = 1 << 8
 link_all_y  = 1 << 9
 col_major   = 1 << 10
}

enum ImPlotLegendFlags_ {
 none              = 0
 no_buttons        = 1 << 0
 no_highlight_item = 1 << 1
 no_highlight_axis = 1 << 2
 no_menus          = 1 << 3
 outside           = 1 << 4
 horizontal        = 1 << 5
 sort              = 1 << 6
}

enum ImPlotMouseTextFlags_ {
 none        = 0
 no_aux_axes = 1 << 0
 no_format   = 1 << 1
 show_always = 1 << 2
}

enum ImPlotDragToolFlags_ {
 none       = 0
 no_cursors = 1 << 0
 no_fit     = 1 << 1
 no_inputs  = 1 << 2
 delayed    = 1 << 3
}

enum ImPlotColormapScaleFlags_ {
 none     = 0
 no_label = 1 << 0
 opposite = 1 << 1
 invert   = 1 << 2
}

enum ImPlotItemFlags_ {
 none      = 0
 no_legend = 1 << 0
 no_fit    = 1 << 1
}

enum ImPlotLineFlags_ {
 none      = 0
 segments  = 1 << 10
 loop      = 1 << 11
 skip_na_n = 1 << 12
 no_clip   = 1 << 13
 shaded    = 1 << 14
}

enum ImPlotScatterFlags_ {
 none    = 0
 no_clip = 1 << 10
}

enum ImPlotStairsFlags_ {
 none     = 0
 pre_step = 1 << 10
 shaded   = 1 << 11
}

enum ImPlotShadedFlags_ {
 none = 0
}

enum ImPlotBarsFlags_ {
 none       = 0
 horizontal = 1 << 10
}

enum ImPlotBarGroupsFlags_ {
 none       = 0
 horizontal = 1 << 10
 stacked    = 1 << 11
}

enum ImPlotErrorBarsFlags_ {
 none       = 0
 horizontal = 1 << 10
}

enum ImPlotStemsFlags_ {
 none       = 0
 horizontal = 1 << 10
}

enum ImPlotInfLinesFlags_ {
 none       = 0
 horizontal = 1 << 10
}

enum ImPlotPieChartFlags_ {
 none          = 0
 normalize     = 1 << 10
 ignore_hidden = 1 << 11
 exploding     = 1 << 12
}

enum ImPlotHeatmapFlags_ {
 none      = 0
 col_major = 1 << 10
}

enum ImPlotHistogramFlags_ {
 none        = 0
 horizontal  = 1 << 10
 cumulative  = 1 << 11
 density     = 1 << 12
 no_outliers = 1 << 13
 col_major   = 1 << 14
}

enum ImPlotDigitalFlags_ {
 none = 0
}

enum ImPlotImageFlags_ {
 none = 0
}

enum ImPlotTextFlags_ {
 none     = 0
 vertical = 1 << 10
}

enum ImPlotDummyFlags_ {
 none = 0
}

enum ImPlotCond_ {
 none   = int(Cond_.none)
 always = int(Cond_.always)
 once   = int(Cond_.once)
}

enum ImPlotCol_ {
 line
 fill
 marker_outline
 marker_fill
 error_bar
 frame_bg
 plot_bg
 plot_border
 legend_bg
 legend_border
 legend_text
 title_text
 inlay_text
 axis_text
 axis_grid
 axis_tick
 axis_bg
 axis_bg_hovered
 axis_bg_active
 selection
 crosshairs
 count
}

enum ImPlotStyleVar_ {
 line_weight
 marker
 marker_size
 marker_weight
 fill_alpha
 error_bar_size
 error_bar_weight
 digital_bit_height
 digital_bit_gap
 plot_border_size
 minor_alpha
 major_tick_len
 minor_tick_len
 major_tick_size
 minor_tick_size
 major_grid_size
 minor_grid_size
 plot_padding
 label_padding
 legend_padding
 legend_inner_padding
 legend_spacing
 mouse_pos_padding
 annotation_padding
 fit_padding
 plot_default_size
 plot_min_size
 count
}

enum ImPlotScale_ {
 linear = 0
 time
 log10
 sym_log
}

enum ImPlotMarker_ {
 none = -1
 circle
 square
 diamond
 up
 down
 left
 right
 cross
 plus
 asterisk
 count
}

enum ImPlotColormap_ {
 deep     = 0
 dark     = 1
 pastel   = 2
 paired   = 3
 viridis  = 4
 plasma   = 5
 hot      = 6
 cool     = 7
 pink     = 8
 jet      = 9
 twilight = 10
 rd_bu    = 11
 br_bg    = 12
 pi_yg    = 13
 spectral = 14
 greys    = 15
}

enum ImPlotLocation_ {
 center     = 0
 north      = 1 << 0
 south      = 1 << 1
 west       = 1 << 2
 east       = 1 << 3
 north_west = 1 << 0 | 1 << 2
 north_east = 1 << 0 | 1 << 3
 south_west = 1 << 1 | 1 << 2
 south_east = 1 << 1 | 1 << 3
}

enum ImPlotBin_ {
 sqrt    = -1
 sturges = -2
 rice    = -3
 scott   = -4
}



pub type ImPlotPoint = C.ImPlotPoint
@[typedef]
struct C.ImPlotPoint {
pub mut:
	X f64
	Y f64
}



pub type ImPlotRange = C.ImPlotRange
@[typedef]
struct C.ImPlotRange {
pub mut:
	Min f64
	Max f64
}



pub type ImPlotRect = C.ImPlotRect
@[typedef]
struct C.ImPlotRect {
pub mut:
	X ImPlotRange
	Y ImPlotRange
}



pub type ImPlotStyle = C.ImPlotStyle
@[typedef]
struct C.ImPlotStyle {
pub mut:
	LineWeight         f32
	Marker             int
	MarkerSize         f32
	MarkerWeight       f32
	FillAlpha          f32
	ErrorBarSize       f32
	ErrorBarWeight     f32
	DigitalBitHeight   f32
	DigitalBitGap      f32
	PlotBorderSize     f32
	MinorAlpha         f32
	MajorTickLen       ImVec2
	MinorTickLen       ImVec2
	MajorTickSize      ImVec2
	MinorTickSize      ImVec2
	MajorGridSize      ImVec2
	MinorGridSize      ImVec2
	PlotPadding        ImVec2
	LabelPadding       ImVec2
	LegendPadding      ImVec2
	LegendInnerPadding ImVec2
	LegendSpacing      ImVec2
	MousePosPadding    ImVec2
	AnnotationPadding  ImVec2
	FitPadding         ImVec2
	PlotDefaultSize    ImVec2
	PlotMinSize        ImVec2
	Colors             [21]ImVec4
	Colormap           ImPlotColormap
	UseLocalTime       bool
	UseISO8601         bool
	Use24HourClock     bool
}



pub type ImPlotInputMap = C.ImPlotInputMap
@[typedef]
struct C.ImPlotInputMap {
pub mut:
	Pan           MouseButton
	PanMod        int
	Fit           MouseButton
	Select        MouseButton
	SelectCancel  MouseButton
	SelectMod     int
	SelectHorzMod int
	SelectVertMod int
	Menu          MouseButton
	OverrideMod   int
	ZoomMod       int
	ZoomRate      f32
}

type ImPlotFormatter = fn (f64, &i8, int, voidptr) int

type ImPlotGetter = fn (int, voidptr) ImPlotPoint

type ImPlotTransform = fn (f64, voidptr) f64

@[weak]
__global GImPlot &ImPlotContext

type ImPlotTimeUnit = int
type ImPlotDateFmt = int
type ImPlotTimeFmt = int

enum ImPlotTimeUnit_ {
 us
 ms
 s
 min
 hr
 day
 mo
 yr
 count
}

enum ImPlotDateFmt_ {
 none = 0
 day_mo
 day_mo_yr
 mo_yr
 mo
 yr
}

enum ImPlotTimeFmt_ {
 none = 0
 us
 su_s
 sm_s
 s
 min_sm_s
 hr_min_sm_s
 hr_min_s
 hr_min
 hr
}

type ImPlotLocator = fn (&ImPlotTicker, ImPlotRange, f32, bool, ImPlotFormatter, voidptr)



pub type ImPlotDateTimeSpec = C.ImPlotDateTimeSpec
@[typedef]
struct C.ImPlotDateTimeSpec {
pub mut:
	Date           ImPlotDateFmt
	Time           ImPlotTimeFmt
	UseISO8601     bool
	Use24HourClock bool
}



pub type ImPlotTime = C.ImPlotTime
@[typedef]
struct C.ImPlotTime {
pub mut:
	S  Time_t
	Us int
}



pub type ImVector_bool = C.ImVector_bool
@[typedef]
struct C.ImVector_bool {
pub mut:
	Size     int
	Capacity int
	Data     /*&bool*/voidptr= unsafe{ nil }
}



pub type ImPlotColormapData = C.ImPlotColormapData
@[typedef]
struct C.ImPlotColormapData {
pub mut:
	Keys         ImVector_ImU32
	KeyCounts    ImVector_int
	KeyOffsets   ImVector_int
	Tables       ImVector_ImU32
	TableSizes   ImVector_int
	TableOffsets ImVector_int
	Text         TextBuffer
	TextOffsets  ImVector_int
	Quals        ImVector_bool
	Map          Storage
	Count        int
}



pub type ImPlotPointError = C.ImPlotPointError
@[typedef]
struct C.ImPlotPointError {
pub mut:
	X   f64
	Y   f64
	Neg f64
	Pos f64
}



pub type ImPlotAnnotation = C.ImPlotAnnotation
@[typedef]
struct C.ImPlotAnnotation {
pub mut:
	Pos        ImVec2
	Offset     ImVec2
	ColorBg    ImU32
	ColorFg    ImU32
	TextOffset int
	Clamp      bool
}



pub type ImVector_ImPlotAnnotation = C.ImVector_ImPlotAnnotation
@[typedef]
struct C.ImVector_ImPlotAnnotation {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotAnnotation*/voidptr= unsafe{ nil }
}



pub type ImPlotAnnotationCollection = C.ImPlotAnnotationCollection
@[typedef]
struct C.ImPlotAnnotationCollection {
pub mut:
	Annotations ImVector_ImPlotAnnotation
	TextBuffer  TextBuffer
	Size        int
}



pub type ImPlotTag = C.ImPlotTag
@[typedef]
struct C.ImPlotTag {
pub mut:
	Axis       ImAxis
	Value      f64
	ColorBg    ImU32
	ColorFg    ImU32
	TextOffset int
}



pub type ImVector_ImPlotTag = C.ImVector_ImPlotTag
@[typedef]
struct C.ImVector_ImPlotTag {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotTag*/voidptr= unsafe{ nil }
}



pub type ImPlotTagCollection = C.ImPlotTagCollection
@[typedef]
struct C.ImPlotTagCollection {
pub mut:
	Tags       ImVector_ImPlotTag
	TextBuffer TextBuffer
	Size       int
}



pub type ImPlotTick = C.ImPlotTick
@[typedef]
struct C.ImPlotTick {
pub mut:
	PlotPos    f64
	PixelPos   f32
	LabelSize  ImVec2
	TextOffset int
	Major      bool
	ShowLabel  bool
	Level      int
	Idx        int
}



pub type ImVector_ImPlotTick = C.ImVector_ImPlotTick
@[typedef]
struct C.ImVector_ImPlotTick {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotTick*/voidptr= unsafe{ nil }
}



pub type ImPlotTicker = C.ImPlotTicker
@[typedef]
struct C.ImPlotTicker {
pub mut:
	Ticks      ImVector_ImPlotTick
	TextBuffer TextBuffer
	MaxSize    ImVec2
	LateSize   ImVec2
	Levels     int
}



pub type ImPlotAxis = C.ImPlotAxis
@[typedef]
struct C.ImPlotAxis {
pub mut:
	ID               ID
	Flags            ImPlotAxisFlags
	PreviousFlags    ImPlotAxisFlags
	Range            ImPlotRange
	RangeCond        ImPlotCond
	Scale            ImPlotScale
	FitExtents       ImPlotRange
	OrthoAxis        &ImPlotAxis
	ConstraintRange  ImPlotRange
	ConstraintZoom   ImPlotRange
	Ticker           ImPlotTicker
	Formatter        ImPlotFormatter
	FormatterData    voidptr
	FormatSpec       [16]i8
	Locator          ImPlotLocator
	LinkedMin        &f64
	LinkedMax        &f64
	PickerLevel      int
	PickerTimeMin    ImPlotTime
	PickerTimeMax    ImPlotTime
	TransformForward ImPlotTransform
	TransformInverse ImPlotTransform
	TransformData    voidptr
	PixelMin         f32
	PixelMax         f32
	ScaleMin         f64
	ScaleMax         f64
	ScaleToPixel     f64
	Datum1           f32
	Datum2           f32
	HoverRect        ImRect
	LabelOffset      int
	ColorMaj         ImU32
	ColorMin         ImU32
	ColorTick        ImU32
	ColorTxt         ImU32
	ColorBg          ImU32
	ColorHov         ImU32
	ColorAct         ImU32
	ColorHiLi        ImU32
	Enabled          bool
	Vertical         bool
	FitThisFrame     bool
	HasRange         bool
	HasFormatSpec    bool
	ShowDefaultTicks bool
	Hovered          bool
	Held             bool
}



pub type ImPlotAlignmentData = C.ImPlotAlignmentData
@[typedef]
struct C.ImPlotAlignmentData {
pub mut:
	Vertical bool
	PadA     f32
	PadB     f32
	PadAMax  f32
	PadBMax  f32
}



pub type ImPlotItem = C.ImPlotItem
@[typedef]
struct C.ImPlotItem {
pub mut:
	ID              ID
	Color           ImU32
	LegendHoverRect ImRect
	NameOffset      int
	Show            bool
	LegendHovered   bool
	SeenThisFrame   bool
}



pub type ImPlotLegend = C.ImPlotLegend
@[typedef]
struct C.ImPlotLegend {
pub mut:
	Flags            ImPlotLegendFlags
	PreviousFlags    ImPlotLegendFlags
	Location         ImPlotLocation
	PreviousLocation ImPlotLocation
	Scroll           ImVec2
	Indices          ImVector_int
	Labels           TextBuffer
	Rect             ImRect
	RectClamped      ImRect
	Hovered          bool
	Held             bool
	CanGoInside      bool
}



pub type ImVector_ImPlotItem = C.ImVector_ImPlotItem
@[typedef]
struct C.ImVector_ImPlotItem {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotItem*/voidptr= unsafe{ nil }
}



pub type ImPool_ImPlotItem = C.ImPool_ImPlotItem
@[typedef]
struct C.ImPool_ImPlotItem {
pub mut:
	Buf        ImVector_ImPlotItem
	Map        Storage
	FreeIdx    ImPoolIdx
	AliveCount ImPoolIdx
}



pub type ImPlotItemGroup = C.ImPlotItemGroup
@[typedef]
struct C.ImPlotItemGroup {
pub mut:
	ID          ID
	Legend      ImPlotLegend
	ItemPool    ImPool_ImPlotItem
	ColormapIdx int
}



pub type ImPlotPlot = C.ImPlotPlot
@[typedef]
struct C.ImPlotPlot {
pub mut:
	ID                ID
	Flags             ImPlotFlags
	PreviousFlags     ImPlotFlags
	MouseTextLocation ImPlotLocation
	MouseTextFlags    ImPlotMouseTextFlags
	Axes              [6]ImPlotAxis
	TextBuffer        TextBuffer
	Items             ImPlotItemGroup
	CurrentX          ImAxis
	CurrentY          ImAxis
	FrameRect         ImRect
	CanvasRect        ImRect
	PlotRect          ImRect
	AxesRect          ImRect
	SelectRect        ImRect
	SelectStart       ImVec2
	TitleOffset       int
	JustCreated       bool
	Initialized       bool
	SetupLocked       bool
	FitThisFrame      bool
	Hovered           bool
	Held              bool
	Selecting         bool
	Selected          bool
	ContextLocked     bool
}



pub type ImVector_ImPlotAlignmentData = C.ImVector_ImPlotAlignmentData
@[typedef]
struct C.ImVector_ImPlotAlignmentData {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotAlignmentData*/voidptr= unsafe{ nil }
}



pub type ImVector_ImPlotRange = C.ImVector_ImPlotRange
@[typedef]
struct C.ImVector_ImPlotRange {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotRange*/voidptr= unsafe{ nil }
}



pub type ImPlotSubplot = C.ImPlotSubplot
@[typedef]
struct C.ImPlotSubplot {
pub mut:
	ID               ID
	Flags            ImPlotSubplotFlags
	PreviousFlags    ImPlotSubplotFlags
	Items            ImPlotItemGroup
	Rows             int
	Cols             int
	CurrentIdx       int
	FrameRect        ImRect
	GridRect         ImRect
	CellSize         ImVec2
	RowAlignmentData ImVector_ImPlotAlignmentData
	ColAlignmentData ImVector_ImPlotAlignmentData
	RowRatios        ImVector_float
	ColRatios        ImVector_float
	RowLinkData      ImVector_ImPlotRange
	ColLinkData      ImVector_ImPlotRange
	TempSizes        [2]f32
	FrameHovered     bool
	HasTitle         bool
}



pub type ImPlotNextPlotData = C.ImPlotNextPlotData
@[typedef]
struct C.ImPlotNextPlotData {
pub mut:
	RangeCond [6]ImPlotCond
	Range     [6]ImPlotRange
	HasRange  [6]bool
	Fit       [6]bool
	LinkedMin [6]/*&f64*/voidptr
	LinkedMax [6]/*&f64*/voidptr
}



pub type ImPlotNextItemData = C.ImPlotNextItemData
@[typedef]
struct C.ImPlotNextItemData {
pub mut:
	Colors           [5]ImVec4
	LineWeight       f32
	Marker           ImPlotMarker
	MarkerSize       f32
	MarkerWeight     f32
	FillAlpha        f32
	ErrorBarSize     f32
	ErrorBarWeight   f32
	DigitalBitHeight f32
	DigitalBitGap    f32
	RenderLine       bool
	RenderFill       bool
	RenderMarkerLine bool
	RenderMarkerFill bool
	HasHidden        bool
	Hidden           bool
	HiddenCond       ImPlotCond
}



pub type ImVector_ImPlotPlot = C.ImVector_ImPlotPlot
@[typedef]
struct C.ImVector_ImPlotPlot {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotPlot*/voidptr= unsafe{ nil }
}



pub type ImPool_ImPlotPlot = C.ImPool_ImPlotPlot
@[typedef]
struct C.ImPool_ImPlotPlot {
pub mut:
	Buf        ImVector_ImPlotPlot
	Map        Storage
	FreeIdx    ImPoolIdx
	AliveCount ImPoolIdx
}



pub type ImVector_ImPlotSubplot = C.ImVector_ImPlotSubplot
@[typedef]
struct C.ImVector_ImPlotSubplot {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotSubplot*/voidptr= unsafe{ nil }
}



pub type ImPool_ImPlotSubplot = C.ImPool_ImPlotSubplot
@[typedef]
struct C.ImPool_ImPlotSubplot {
pub mut:
	Buf        ImVector_ImPlotSubplot
	Map        Storage
	FreeIdx    ImPoolIdx
	AliveCount ImPoolIdx
}



pub type ImVector_ImPlotColormap = C.ImVector_ImPlotColormap
@[typedef]
struct C.ImVector_ImPlotColormap {
pub mut:
	Size     int
	Capacity int
	Data     /*&ImPlotColormap*/voidptr= unsafe{ nil }
}



pub type ImVector_double = C.ImVector_double
@[typedef]
struct C.ImVector_double {
pub mut:
	Size     int
	Capacity int
	Data     /*&f64*/voidptr= unsafe{ nil }
}



pub type ImPool_ImPlotAlignmentData = C.ImPool_ImPlotAlignmentData
@[typedef]
struct C.ImPool_ImPlotAlignmentData {
pub mut:
	Buf        ImVector_ImPlotAlignmentData
	Map        Storage
	FreeIdx    ImPoolIdx
	AliveCount ImPoolIdx
}



pub type ImPlotContext = C.ImPlotContext
@[typedef]
struct C.ImPlotContext {
pub mut:
	Plots                 ImPool_ImPlotPlot
	Subplots              ImPool_ImPlotSubplot
	CurrentPlot           &ImPlotPlot
	CurrentSubplot        &ImPlotSubplot
	CurrentItems          &ImPlotItemGroup
	CurrentItem           &ImPlotItem
	PreviousItem          &ImPlotItem
	CTicker               ImPlotTicker
	Annotations           ImPlotAnnotationCollection
	Tags                  ImPlotTagCollection
	Style                 ImPlotStyle
	ColorModifiers        ImVector_ColorMod
	StyleModifiers        ImVector_StyleMod
	ColormapData          ImPlotColormapData
	ColormapModifiers     ImVector_ImPlotColormap
	Tm                    Tm
	TempDouble1           ImVector_double
	TempDouble2           ImVector_double
	TempInt1              ImVector_int
	DigitalPlotItemCnt    int
	DigitalPlotOffset     int
	NextPlotData          ImPlotNextPlotData
	NextItemData          ImPlotNextItemData
	InputMap              ImPlotInputMap
	OpenContextThisFrame  bool
	MousePosStringBuilder TextBuffer
	SortItems             &ImPlotItemGroup
	AlignmentData         ImPool_ImPlotAlignmentData
	CurrentAlignmentH     &ImPlotAlignmentData
	CurrentAlignmentV     &ImPlotAlignmentData
}



pub type ImPlotPoint_getter = C.ImPlotPoint_getter
@[typedef]
struct C.ImPlotPoint_getter {
pub mut:
	Time              ImPlotTime
	Spec              ImPlotDateTimeSpec
	UserFormatter     /*ImPlotFormatter*/voidptr = unsafe{ nil }
	UserFormatterData voidptr = unsafe{ nil }
}

// CIMGUI_DEFINE_ENUMS_AND_STRUCTS
// ImPlotPoint getters manually wrapped use this
// CIMGUI_DEFINE_ENUMS_AND_STRUCTS
@[c: 'ImPlotPoint_ImPlotPoint_Nil']
pub fn im_plot_point_im_plot_point_nil() &ImPlotPoint

@[c: 'ImPlotPoint_destroy']
pub fn im_plot_point_destroy(self &ImPlotPoint)

@[c: 'ImPlotPoint_ImPlotPoint_double']
pub fn im_plot_point_im_plot_point_double(_x f64, _y f64) &ImPlotPoint

@[c: 'ImPlotPoint_ImPlotPoint_Vec2']
pub fn im_plot_point_im_plot_point_vec2(p ImVec2) &ImPlotPoint

@[c: 'ImPlotRange_ImPlotRange_Nil']
pub fn im_plot_range_im_plot_range_nil() &ImPlotRange

@[c: 'ImPlotRange_destroy']
pub fn im_plot_range_destroy(self &ImPlotRange)

@[c: 'ImPlotRange_ImPlotRange_double']
pub fn im_plot_range_im_plot_range_double(_min f64, _max f64) &ImPlotRange

@[c: 'ImPlotRange_Contains']
pub fn im_plot_range_contains(self &ImPlotRange, value f64) bool

@[c: 'ImPlotRange_Size']
pub fn im_plot_range_size(self &ImPlotRange) f64

@[c: 'ImPlotRange_Clamp']
pub fn im_plot_range_clamp(self &ImPlotRange, value f64) f64

@[c: 'ImPlotRect_ImPlotRect_Nil']
pub fn im_plot_rect_im_plot_rect_nil() &ImPlotRect

@[c: 'ImPlotRect_destroy']
pub fn im_plot_rect_destroy(self &ImPlotRect)

@[c: 'ImPlotRect_ImPlotRect_double']
pub fn im_plot_rect_im_plot_rect_double(x_min f64, x_max f64, y_min f64, y_max f64) &ImPlotRect

@[c: 'ImPlotRect_Contains_PlotPoInt']
pub fn im_plot_rect_contains_plot_po_int(self &ImPlotRect, p ImPlotPoint) bool

@[c: 'ImPlotRect_Contains_double']
pub fn im_plot_rect_contains_double(self &ImPlotRect, x f64, y f64) bool

@[c: 'ImPlotRect_Size']
pub fn im_plot_rect_size(p_out &ImPlotPoint, self &ImPlotRect)

@[c: 'ImPlotRect_Clamp_PlotPoInt']
pub fn im_plot_rect_clamp_plot_po_int(p_out &ImPlotPoint, self &ImPlotRect, p ImPlotPoint)

@[c: 'ImPlotRect_Clamp_double']
pub fn im_plot_rect_clamp_double(p_out &ImPlotPoint, self &ImPlotRect, x f64, y f64)

@[c: 'ImPlotRect_Min']
pub fn im_plot_rect_min(p_out &ImPlotPoint, self &ImPlotRect)

@[c: 'ImPlotRect_Max']
pub fn im_plot_rect_max(p_out &ImPlotPoint, self &ImPlotRect)

@[c: 'ImPlotStyle_ImPlotStyle']
pub fn im_plot_style_im_plot_style() &ImPlotStyle

@[c: 'ImPlotStyle_destroy']
pub fn im_plot_style_destroy(self &ImPlotStyle)

@[c: 'ImPlotInputMap_ImPlotInputMap']
pub fn im_plot_input_map_im_plot_input_map() &ImPlotInputMap

@[c: 'ImPlotInputMap_destroy']
pub fn im_plot_input_map_destroy(self &ImPlotInputMap)

@[c: 'ImPlot_CreateContext']
pub fn im_plot_create_context() &ImPlotContext

@[c: 'ImPlot_DestroyContext']
pub fn im_plot_destroy_context(ctx &ImPlotContext)

@[c: 'ImPlot_GetCurrentContext']
pub fn im_plot_get_current_context() &ImPlotContext

@[c: 'ImPlot_SetCurrentContext']
pub fn im_plot_set_current_context(ctx &ImPlotContext)

@[c: 'ImPlot_SetContext']
pub fn im_plot_set_im_gui_context(ctx &Context)

@[c: 'ImPlot_BeginPlot']
pub fn im_plot_begin_plot(title_id &i8, size ImVec2, flags ImPlotFlags) bool

@[c: 'ImPlot_EndPlot']
pub fn im_plot_end_plot()

@[c: 'ImPlot_BeginSubplots']
pub fn im_plot_begin_subplots(title_id &i8, rows int, cols int, size ImVec2, flags ImPlotSubplotFlags, row_ratios &f32, col_ratios &f32) bool

@[c: 'ImPlot_EndSubplots']
pub fn im_plot_end_subplots()

@[c: 'ImPlot_SetupAxis']
pub fn im_plot_setup_axis(axis ImAxis, label &i8, flags ImPlotAxisFlags)

@[c: 'ImPlot_SetupAxisLimits']
pub fn im_plot_setup_axis_limits(axis ImAxis, v_min f64, v_max f64, cond ImPlotCond)

@[c: 'ImPlot_SetupAxisLinks']
pub fn im_plot_setup_axis_links(axis ImAxis, link_min &f64, link_max &f64)

@[c: 'ImPlot_SetupAxisFormat_Str']
pub fn im_plot_setup_axis_format_str(axis ImAxis, fmt &i8)

@[c: 'ImPlot_SetupAxisFormat_PlotFormatter']
pub fn im_plot_setup_axis_format_plot_formatter(axis ImAxis, formatter ImPlotFormatter, data voidptr)

@[c: 'ImPlot_SetupAxisTicks_doublePtr']
pub fn im_plot_setup_axis_ticks_double_ptr(axis ImAxis, values &f64, n_ticks int, labels &&u8, keep_default bool)

@[c: 'ImPlot_SetupAxisTicks_double']
pub fn im_plot_setup_axis_ticks_double(axis ImAxis, v_min f64, v_max f64, n_ticks int, labels &&u8, keep_default bool)

@[c: 'ImPlot_SetupAxisScale_PlotScale']
pub fn im_plot_setup_axis_scale_plot_scale(axis ImAxis, scale ImPlotScale)

@[c: 'ImPlot_SetupAxisScale_PlotTransform']
pub fn im_plot_setup_axis_scale_plot_transform(axis ImAxis, forward ImPlotTransform, inverse ImPlotTransform, data voidptr)

@[c: 'ImPlot_SetupAxisLimitsConstraints']
pub fn im_plot_setup_axis_limits_constraints(axis ImAxis, v_min f64, v_max f64)

@[c: 'ImPlot_SetupAxisZoomConstraints']
pub fn im_plot_setup_axis_zoom_constraints(axis ImAxis, z_min f64, z_max f64)

@[c: 'ImPlot_SetupAxes']
pub fn im_plot_setup_axes(x_label &i8, y_label &i8, x_flags ImPlotAxisFlags, y_flags ImPlotAxisFlags)

@[c: 'ImPlot_SetupAxesLimits']
pub fn im_plot_setup_axes_limits(x_min f64, x_max f64, y_min f64, y_max f64, cond ImPlotCond)

@[c: 'ImPlot_SetupLegend']
pub fn im_plot_setup_legend(location ImPlotLocation, flags ImPlotLegendFlags)

@[c: 'ImPlot_SetupMouseText']
pub fn im_plot_setup_mouse_text(location ImPlotLocation, flags ImPlotMouseTextFlags)

@[c: 'ImPlot_SetupFinish']
pub fn im_plot_setup_finish()

@[c: 'ImPlot_SetNextAxisLimits']
pub fn im_plot_set_next_axis_limits(axis ImAxis, v_min f64, v_max f64, cond ImPlotCond)

@[c: 'ImPlot_SetNextAxisLinks']
pub fn im_plot_set_next_axis_links(axis ImAxis, link_min &f64, link_max &f64)

@[c: 'ImPlot_SetNextAxisToFit']
pub fn im_plot_set_next_axis_to_fit(axis ImAxis)

@[c: 'ImPlot_SetNextAxesLimits']
pub fn im_plot_set_next_axes_limits(x_min f64, x_max f64, y_min f64, y_max f64, cond ImPlotCond)

@[c: 'ImPlot_SetNextAxesToFit']
pub fn im_plot_set_next_axes_to_fit()

@[c: 'ImPlot_PlotLine_FloatPtrInt']
pub fn im_plot_plot_line_float_ptr_int(label_id &i8, values &f32, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_doublePtrInt']
pub fn im_plot_plot_line_double_ptr_int(label_id &i8, values &f64, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S8PtrInt']
pub fn im_plot_plot_line_s8_ptr_int(label_id &i8, values &ImS8, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U8PtrInt']
pub fn im_plot_plot_line_u8_ptr_int(label_id &i8, values &ImU8, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S16PtrInt']
pub fn im_plot_plot_line_s16_ptr_int(label_id &i8, values &ImS16, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U16PtrInt']
pub fn im_plot_plot_line_u16_ptr_int(label_id &i8, values &ImU16, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S32PtrInt']
pub fn im_plot_plot_line_s32_ptr_int(label_id &i8, values &ImS32, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U32PtrInt']
pub fn im_plot_plot_line_u32_ptr_int(label_id &i8, values &ImU32, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S64PtrInt']
pub fn im_plot_plot_line_s64_ptr_int(label_id &i8, values &ImS64, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U64PtrInt']
pub fn im_plot_plot_line_u64_ptr_int(label_id &i8, values &ImU64, count int, xscale f64, xstart f64, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_FloatPtrFloatPtr']
pub fn im_plot_plot_line_float_ptr_float_ptr(label_id &i8, xs &f32, ys &f32, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_doublePtrdoublePtr']
pub fn im_plot_plot_line_double_ptrdouble_ptr(label_id &i8, xs &f64, ys &f64, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S8PtrS8Ptr']
pub fn im_plot_plot_line_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U8PtrU8Ptr']
pub fn im_plot_plot_line_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S16PtrS16Ptr']
pub fn im_plot_plot_line_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U16PtrU16Ptr']
pub fn im_plot_plot_line_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S32PtrS32Ptr']
pub fn im_plot_plot_line_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U32PtrU32Ptr']
pub fn im_plot_plot_line_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_S64PtrS64Ptr']
pub fn im_plot_plot_line_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLine_U64PtrU64Ptr']
pub fn im_plot_plot_line_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, flags ImPlotLineFlags, offset int, stride int)

@[c: 'ImPlot_PlotLineG']
pub fn im_plot_plot_line_g(label_id &i8, getter ImPlotPoint_getter, data voidptr, count int, flags ImPlotLineFlags)

// custom generation
@[c: 'ImPlot_PlotScatter_FloatPtrInt']
pub fn im_plot_plot_scatter_float_ptr_int(label_id &i8, values &f32, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_doublePtrInt']
pub fn im_plot_plot_scatter_double_ptr_int(label_id &i8, values &f64, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S8PtrInt']
pub fn im_plot_plot_scatter_s8_ptr_int(label_id &i8, values &ImS8, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U8PtrInt']
pub fn im_plot_plot_scatter_u8_ptr_int(label_id &i8, values &ImU8, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S16PtrInt']
pub fn im_plot_plot_scatter_s16_ptr_int(label_id &i8, values &ImS16, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U16PtrInt']
pub fn im_plot_plot_scatter_u16_ptr_int(label_id &i8, values &ImU16, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S32PtrInt']
pub fn im_plot_plot_scatter_s32_ptr_int(label_id &i8, values &ImS32, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U32PtrInt']
pub fn im_plot_plot_scatter_u32_ptr_int(label_id &i8, values &ImU32, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S64PtrInt']
pub fn im_plot_plot_scatter_s64_ptr_int(label_id &i8, values &ImS64, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U64PtrInt']
pub fn im_plot_plot_scatter_u64_ptr_int(label_id &i8, values &ImU64, count int, xscale f64, xstart f64, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_FloatPtrFloatPtr']
pub fn im_plot_plot_scatter_float_ptr_float_ptr(label_id &i8, xs &f32, ys &f32, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_doublePtrdoublePtr']
pub fn im_plot_plot_scatter_double_ptrdouble_ptr(label_id &i8, xs &f64, ys &f64, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S8PtrS8Ptr']
pub fn im_plot_plot_scatter_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U8PtrU8Ptr']
pub fn im_plot_plot_scatter_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S16PtrS16Ptr']
pub fn im_plot_plot_scatter_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U16PtrU16Ptr']
pub fn im_plot_plot_scatter_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S32PtrS32Ptr']
pub fn im_plot_plot_scatter_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U32PtrU32Ptr']
pub fn im_plot_plot_scatter_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_S64PtrS64Ptr']
pub fn im_plot_plot_scatter_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatter_U64PtrU64Ptr']
pub fn im_plot_plot_scatter_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, flags ImPlotScatterFlags, offset int, stride int)

@[c: 'ImPlot_PlotScatterG']
pub fn im_plot_plot_scatter_g(label_id &i8, getter ImPlotPoint_getter, data voidptr, count int, flags ImPlotScatterFlags)

// custom generation
@[c: 'ImPlot_PlotStairs_FloatPtrInt']
pub fn im_plot_plot_stairs_float_ptr_int(label_id &i8, values &f32, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_doublePtrInt']
pub fn im_plot_plot_stairs_double_ptr_int(label_id &i8, values &f64, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S8PtrInt']
pub fn im_plot_plot_stairs_s8_ptr_int(label_id &i8, values &ImS8, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U8PtrInt']
pub fn im_plot_plot_stairs_u8_ptr_int(label_id &i8, values &ImU8, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S16PtrInt']
pub fn im_plot_plot_stairs_s16_ptr_int(label_id &i8, values &ImS16, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U16PtrInt']
pub fn im_plot_plot_stairs_u16_ptr_int(label_id &i8, values &ImU16, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S32PtrInt']
pub fn im_plot_plot_stairs_s32_ptr_int(label_id &i8, values &ImS32, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U32PtrInt']
pub fn im_plot_plot_stairs_u32_ptr_int(label_id &i8, values &ImU32, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S64PtrInt']
pub fn im_plot_plot_stairs_s64_ptr_int(label_id &i8, values &ImS64, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U64PtrInt']
pub fn im_plot_plot_stairs_u64_ptr_int(label_id &i8, values &ImU64, count int, xscale f64, xstart f64, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_FloatPtrFloatPtr']
pub fn im_plot_plot_stairs_float_ptr_float_ptr(label_id &i8, xs &f32, ys &f32, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_doublePtrdoublePtr']
pub fn im_plot_plot_stairs_double_ptrdouble_ptr(label_id &i8, xs &f64, ys &f64, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S8PtrS8Ptr']
pub fn im_plot_plot_stairs_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U8PtrU8Ptr']
pub fn im_plot_plot_stairs_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S16PtrS16Ptr']
pub fn im_plot_plot_stairs_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U16PtrU16Ptr']
pub fn im_plot_plot_stairs_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S32PtrS32Ptr']
pub fn im_plot_plot_stairs_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U32PtrU32Ptr']
pub fn im_plot_plot_stairs_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_S64PtrS64Ptr']
pub fn im_plot_plot_stairs_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairs_U64PtrU64Ptr']
pub fn im_plot_plot_stairs_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, flags ImPlotStairsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStairsG']
pub fn im_plot_plot_stairs_g(label_id &i8, getter ImPlotPoint_getter, data voidptr, count int, flags ImPlotStairsFlags)

// custom generation
@[c: 'ImPlot_PlotShaded_FloatPtrInt']
pub fn im_plot_plot_shaded_float_ptr_int(label_id &i8, values &f32, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_doublePtrInt']
pub fn im_plot_plot_shaded_double_ptr_int(label_id &i8, values &f64, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S8PtrInt']
pub fn im_plot_plot_shaded_s8_ptr_int(label_id &i8, values &ImS8, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U8PtrInt']
pub fn im_plot_plot_shaded_u8_ptr_int(label_id &i8, values &ImU8, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S16PtrInt']
pub fn im_plot_plot_shaded_s16_ptr_int(label_id &i8, values &ImS16, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U16PtrInt']
pub fn im_plot_plot_shaded_u16_ptr_int(label_id &i8, values &ImU16, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S32PtrInt']
pub fn im_plot_plot_shaded_s32_ptr_int(label_id &i8, values &ImS32, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U32PtrInt']
pub fn im_plot_plot_shaded_u32_ptr_int(label_id &i8, values &ImU32, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S64PtrInt']
pub fn im_plot_plot_shaded_s64_ptr_int(label_id &i8, values &ImS64, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U64PtrInt']
pub fn im_plot_plot_shaded_u64_ptr_int(label_id &i8, values &ImU64, count int, yref f64, xscale f64, xstart f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_FloatPtrFloatPtrInt']
pub fn im_plot_plot_shaded_float_ptr_float_ptr_int(label_id &i8, xs &f32, ys &f32, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_doublePtrdoublePtrInt']
pub fn im_plot_plot_shaded_double_ptrdouble_ptr_int(label_id &i8, xs &f64, ys &f64, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S8PtrS8PtrInt']
pub fn im_plot_plot_shaded_s8_ptr_s8_ptr_int(label_id &i8, xs &ImS8, ys &ImS8, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U8PtrU8PtrInt']
pub fn im_plot_plot_shaded_u8_ptr_u8_ptr_int(label_id &i8, xs &ImU8, ys &ImU8, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S16PtrS16PtrInt']
pub fn im_plot_plot_shaded_s16_ptr_s16_ptr_int(label_id &i8, xs &ImS16, ys &ImS16, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U16PtrU16PtrInt']
pub fn im_plot_plot_shaded_u16_ptr_u16_ptr_int(label_id &i8, xs &ImU16, ys &ImU16, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S32PtrS32PtrInt']
pub fn im_plot_plot_shaded_s32_ptr_s32_ptr_int(label_id &i8, xs &ImS32, ys &ImS32, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U32PtrU32PtrInt']
pub fn im_plot_plot_shaded_u32_ptr_u32_ptr_int(label_id &i8, xs &ImU32, ys &ImU32, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S64PtrS64PtrInt']
pub fn im_plot_plot_shaded_s64_ptr_s64_ptr_int(label_id &i8, xs &ImS64, ys &ImS64, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U64PtrU64PtrInt']
pub fn im_plot_plot_shaded_u64_ptr_u64_ptr_int(label_id &i8, xs &ImU64, ys &ImU64, count int, yref f64, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_FloatPtrFloatPtrFloatPtr']
pub fn im_plot_plot_shaded_float_ptr_float_ptr_float_ptr(label_id &i8, xs &f32, ys1 &f32, ys2 &f32, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_doublePtrdoublePtrdoublePtr']
pub fn im_plot_plot_shaded_double_ptrdouble_ptrdouble_ptr(label_id &i8, xs &f64, ys1 &f64, ys2 &f64, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S8PtrS8PtrS8Ptr']
pub fn im_plot_plot_shaded_s8_ptr_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys1 &ImS8, ys2 &ImS8, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U8PtrU8PtrU8Ptr']
pub fn im_plot_plot_shaded_u8_ptr_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys1 &ImU8, ys2 &ImU8, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S16PtrS16PtrS16Ptr']
pub fn im_plot_plot_shaded_s16_ptr_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys1 &ImS16, ys2 &ImS16, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U16PtrU16PtrU16Ptr']
pub fn im_plot_plot_shaded_u16_ptr_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys1 &ImU16, ys2 &ImU16, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S32PtrS32PtrS32Ptr']
pub fn im_plot_plot_shaded_s32_ptr_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys1 &ImS32, ys2 &ImS32, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U32PtrU32PtrU32Ptr']
pub fn im_plot_plot_shaded_u32_ptr_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys1 &ImU32, ys2 &ImU32, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_S64PtrS64PtrS64Ptr']
pub fn im_plot_plot_shaded_s64_ptr_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys1 &ImS64, ys2 &ImS64, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShaded_U64PtrU64PtrU64Ptr']
pub fn im_plot_plot_shaded_u64_ptr_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys1 &ImU64, ys2 &ImU64, count int, flags ImPlotShadedFlags, offset int, stride int)

@[c: 'ImPlot_PlotShadedG']
pub fn im_plot_plot_shaded_g(label_id &i8, getter1 ImPlotPoint_getter, data1 voidptr, getter2 ImPlotPoint_getter, data2 voidptr, count int, flags ImPlotShadedFlags)

// custom generation
@[c: 'ImPlot_PlotBars_FloatPtrInt']
pub fn im_plot_plot_bars_float_ptr_int(label_id &i8, values &f32, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_doublePtrInt']
pub fn im_plot_plot_bars_double_ptr_int(label_id &i8, values &f64, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S8PtrInt']
pub fn im_plot_plot_bars_s8_ptr_int(label_id &i8, values &ImS8, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U8PtrInt']
pub fn im_plot_plot_bars_u8_ptr_int(label_id &i8, values &ImU8, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S16PtrInt']
pub fn im_plot_plot_bars_s16_ptr_int(label_id &i8, values &ImS16, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U16PtrInt']
pub fn im_plot_plot_bars_u16_ptr_int(label_id &i8, values &ImU16, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S32PtrInt']
pub fn im_plot_plot_bars_s32_ptr_int(label_id &i8, values &ImS32, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U32PtrInt']
pub fn im_plot_plot_bars_u32_ptr_int(label_id &i8, values &ImU32, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S64PtrInt']
pub fn im_plot_plot_bars_s64_ptr_int(label_id &i8, values &ImS64, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U64PtrInt']
pub fn im_plot_plot_bars_u64_ptr_int(label_id &i8, values &ImU64, count int, bar_size f64, shift f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_FloatPtrFloatPtr']
pub fn im_plot_plot_bars_float_ptr_float_ptr(label_id &i8, xs &f32, ys &f32, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_doublePtrdoublePtr']
pub fn im_plot_plot_bars_double_ptrdouble_ptr(label_id &i8, xs &f64, ys &f64, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S8PtrS8Ptr']
pub fn im_plot_plot_bars_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U8PtrU8Ptr']
pub fn im_plot_plot_bars_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S16PtrS16Ptr']
pub fn im_plot_plot_bars_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U16PtrU16Ptr']
pub fn im_plot_plot_bars_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S32PtrS32Ptr']
pub fn im_plot_plot_bars_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U32PtrU32Ptr']
pub fn im_plot_plot_bars_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_S64PtrS64Ptr']
pub fn im_plot_plot_bars_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBars_U64PtrU64Ptr']
pub fn im_plot_plot_bars_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, bar_size f64, flags ImPlotBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotBarsG']
pub fn im_plot_plot_bars_g(label_id &i8, getter ImPlotPoint_getter, data voidptr, count int, bar_size f64, flags ImPlotBarsFlags)

// custom generation
@[c: 'ImPlot_PlotBarGroups_FloatPtr']
pub fn im_plot_plot_bar_groups_float_ptr(label_ids &&u8, values &f32, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_doublePtr']
pub fn im_plot_plot_bar_groups_double_ptr(label_ids &&u8, values &f64, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_S8Ptr']
pub fn im_plot_plot_bar_groups_s8_ptr(label_ids &&u8, values &ImS8, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_U8Ptr']
pub fn im_plot_plot_bar_groups_u8_ptr(label_ids &&u8, values &ImU8, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_S16Ptr']
pub fn im_plot_plot_bar_groups_s16_ptr(label_ids &&u8, values &ImS16, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_U16Ptr']
pub fn im_plot_plot_bar_groups_u16_ptr(label_ids &&u8, values &ImU16, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_S32Ptr']
pub fn im_plot_plot_bar_groups_s32_ptr(label_ids &&u8, values &ImS32, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_U32Ptr']
pub fn im_plot_plot_bar_groups_u32_ptr(label_ids &&u8, values &ImU32, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_S64Ptr']
pub fn im_plot_plot_bar_groups_s64_ptr(label_ids &&u8, values &ImS64, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotBarGroups_U64Ptr']
pub fn im_plot_plot_bar_groups_u64_ptr(label_ids &&u8, values &ImU64, item_count int, group_count int, group_size f64, shift f64, flags ImPlotBarGroupsFlags)

@[c: 'ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt']
pub fn im_plot_plot_error_bars_float_ptr_float_ptr_float_ptr_int(label_id &i8, xs &f32, ys &f32, err &f32, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt']
pub fn im_plot_plot_error_bars_double_ptrdouble_ptrdouble_ptr_int(label_id &i8, xs &f64, ys &f64, err &f64, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrInt']
pub fn im_plot_plot_error_bars_s8_ptr_s8_ptr_s8_ptr_int(label_id &i8, xs &ImS8, ys &ImS8, err &ImS8, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrInt']
pub fn im_plot_plot_error_bars_u8_ptr_u8_ptr_u8_ptr_int(label_id &i8, xs &ImU8, ys &ImU8, err &ImU8, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrInt']
pub fn im_plot_plot_error_bars_s16_ptr_s16_ptr_s16_ptr_int(label_id &i8, xs &ImS16, ys &ImS16, err &ImS16, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrInt']
pub fn im_plot_plot_error_bars_u16_ptr_u16_ptr_u16_ptr_int(label_id &i8, xs &ImU16, ys &ImU16, err &ImU16, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrInt']
pub fn im_plot_plot_error_bars_s32_ptr_s32_ptr_s32_ptr_int(label_id &i8, xs &ImS32, ys &ImS32, err &ImS32, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrInt']
pub fn im_plot_plot_error_bars_u32_ptr_u32_ptr_u32_ptr_int(label_id &i8, xs &ImU32, ys &ImU32, err &ImU32, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrInt']
pub fn im_plot_plot_error_bars_s64_ptr_s64_ptr_s64_ptr_int(label_id &i8, xs &ImS64, ys &ImS64, err &ImS64, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrInt']
pub fn im_plot_plot_error_bars_u64_ptr_u64_ptr_u64_ptr_int(label_id &i8, xs &ImU64, ys &ImU64, err &ImU64, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr']
pub fn im_plot_plot_error_bars_float_ptr_float_ptr_float_ptr_float_ptr(label_id &i8, xs &f32, ys &f32, neg &f32, pos &f32, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr']
pub fn im_plot_plot_error_bars_double_ptrdouble_ptrdouble_ptrdouble_ptr(label_id &i8, xs &f64, ys &f64, neg &f64, pos &f64, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr']
pub fn im_plot_plot_error_bars_s8_ptr_s8_ptr_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, neg &ImS8, pos &ImS8, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr']
pub fn im_plot_plot_error_bars_u8_ptr_u8_ptr_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, neg &ImU8, pos &ImU8, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr']
pub fn im_plot_plot_error_bars_s16_ptr_s16_ptr_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, neg &ImS16, pos &ImS16, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr']
pub fn im_plot_plot_error_bars_u16_ptr_u16_ptr_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, neg &ImU16, pos &ImU16, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr']
pub fn im_plot_plot_error_bars_s32_ptr_s32_ptr_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, neg &ImS32, pos &ImS32, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr']
pub fn im_plot_plot_error_bars_u32_ptr_u32_ptr_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, neg &ImU32, pos &ImU32, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr']
pub fn im_plot_plot_error_bars_s64_ptr_s64_ptr_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, neg &ImS64, pos &ImS64, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr']
pub fn im_plot_plot_error_bars_u64_ptr_u64_ptr_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, neg &ImU64, pos &ImU64, count int, flags ImPlotErrorBarsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_FloatPtrInt']
pub fn im_plot_plot_stems_float_ptr_int(label_id &i8, values &f32, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_doublePtrInt']
pub fn im_plot_plot_stems_double_ptr_int(label_id &i8, values &f64, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S8PtrInt']
pub fn im_plot_plot_stems_s8_ptr_int(label_id &i8, values &ImS8, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U8PtrInt']
pub fn im_plot_plot_stems_u8_ptr_int(label_id &i8, values &ImU8, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S16PtrInt']
pub fn im_plot_plot_stems_s16_ptr_int(label_id &i8, values &ImS16, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U16PtrInt']
pub fn im_plot_plot_stems_u16_ptr_int(label_id &i8, values &ImU16, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S32PtrInt']
pub fn im_plot_plot_stems_s32_ptr_int(label_id &i8, values &ImS32, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U32PtrInt']
pub fn im_plot_plot_stems_u32_ptr_int(label_id &i8, values &ImU32, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S64PtrInt']
pub fn im_plot_plot_stems_s64_ptr_int(label_id &i8, values &ImS64, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U64PtrInt']
pub fn im_plot_plot_stems_u64_ptr_int(label_id &i8, values &ImU64, count int, ref f64, scale f64, start f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_FloatPtrFloatPtr']
pub fn im_plot_plot_stems_float_ptr_float_ptr(label_id &i8, xs &f32, ys &f32, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_doublePtrdoublePtr']
pub fn im_plot_plot_stems_double_ptrdouble_ptr(label_id &i8, xs &f64, ys &f64, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S8PtrS8Ptr']
pub fn im_plot_plot_stems_s8_ptr_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U8PtrU8Ptr']
pub fn im_plot_plot_stems_u8_ptr_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S16PtrS16Ptr']
pub fn im_plot_plot_stems_s16_ptr_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U16PtrU16Ptr']
pub fn im_plot_plot_stems_u16_ptr_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S32PtrS32Ptr']
pub fn im_plot_plot_stems_s32_ptr_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U32PtrU32Ptr']
pub fn im_plot_plot_stems_u32_ptr_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_S64PtrS64Ptr']
pub fn im_plot_plot_stems_s64_ptr_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotStems_U64PtrU64Ptr']
pub fn im_plot_plot_stems_u64_ptr_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, ref f64, flags ImPlotStemsFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_FloatPtr']
pub fn im_plot_plot_inf_lines_float_ptr(label_id &i8, values &f32, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_doublePtr']
pub fn im_plot_plot_inf_lines_double_ptr(label_id &i8, values &f64, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_S8Ptr']
pub fn im_plot_plot_inf_lines_s8_ptr(label_id &i8, values &ImS8, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_U8Ptr']
pub fn im_plot_plot_inf_lines_u8_ptr(label_id &i8, values &ImU8, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_S16Ptr']
pub fn im_plot_plot_inf_lines_s16_ptr(label_id &i8, values &ImS16, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_U16Ptr']
pub fn im_plot_plot_inf_lines_u16_ptr(label_id &i8, values &ImU16, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_S32Ptr']
pub fn im_plot_plot_inf_lines_s32_ptr(label_id &i8, values &ImS32, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_U32Ptr']
pub fn im_plot_plot_inf_lines_u32_ptr(label_id &i8, values &ImU32, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_S64Ptr']
pub fn im_plot_plot_inf_lines_s64_ptr(label_id &i8, values &ImS64, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotInfLines_U64Ptr']
pub fn im_plot_plot_inf_lines_u64_ptr(label_id &i8, values &ImU64, count int, flags ImPlotInfLinesFlags, offset int, stride int)

@[c: 'ImPlot_PlotPieChart_FloatPtrPlotFormatter']
pub fn im_plot_plot_pie_chart_float_ptr_plot_formatter(label_ids &&u8, values &f32, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_doublePtrPlotFormatter']
pub fn im_plot_plot_pie_chart_double_ptr_plot_formatter(label_ids &&u8, values &f64, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S8PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_s8_ptr_plot_formatter(label_ids &&u8, values &ImS8, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U8PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_u8_ptr_plot_formatter(label_ids &&u8, values &ImU8, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S16PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_s16_ptr_plot_formatter(label_ids &&u8, values &ImS16, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U16PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_u16_ptr_plot_formatter(label_ids &&u8, values &ImU16, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S32PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_s32_ptr_plot_formatter(label_ids &&u8, values &ImS32, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U32PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_u32_ptr_plot_formatter(label_ids &&u8, values &ImU32, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S64PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_s64_ptr_plot_formatter(label_ids &&u8, values &ImS64, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U64PtrPlotFormatter']
pub fn im_plot_plot_pie_chart_u64_ptr_plot_formatter(label_ids &&u8, values &ImU64, count int, x f64, y f64, radius f64, fmt ImPlotFormatter, fmt_data voidptr, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_FloatPtrStr']
pub fn im_plot_plot_pie_chart_float_ptr_str(label_ids &&u8, values &f32, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_doublePtrStr']
pub fn im_plot_plot_pie_chart_double_ptr_str(label_ids &&u8, values &f64, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S8PtrStr']
pub fn im_plot_plot_pie_chart_s8_ptr_str(label_ids &&u8, values &ImS8, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U8PtrStr']
pub fn im_plot_plot_pie_chart_u8_ptr_str(label_ids &&u8, values &ImU8, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S16PtrStr']
pub fn im_plot_plot_pie_chart_s16_ptr_str(label_ids &&u8, values &ImS16, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U16PtrStr']
pub fn im_plot_plot_pie_chart_u16_ptr_str(label_ids &&u8, values &ImU16, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S32PtrStr']
pub fn im_plot_plot_pie_chart_s32_ptr_str(label_ids &&u8, values &ImS32, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U32PtrStr']
pub fn im_plot_plot_pie_chart_u32_ptr_str(label_ids &&u8, values &ImU32, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_S64PtrStr']
pub fn im_plot_plot_pie_chart_s64_ptr_str(label_ids &&u8, values &ImS64, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotPieChart_U64PtrStr']
pub fn im_plot_plot_pie_chart_u64_ptr_str(label_ids &&u8, values &ImU64, count int, x f64, y f64, radius f64, label_fmt &i8, angle0 f64, flags ImPlotPieChartFlags)

@[c: 'ImPlot_PlotHeatmap_FloatPtr']
pub fn im_plot_plot_heatmap_float_ptr(label_id &i8, values &f32, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_doublePtr']
pub fn im_plot_plot_heatmap_double_ptr(label_id &i8, values &f64, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_S8Ptr']
pub fn im_plot_plot_heatmap_s8_ptr(label_id &i8, values &ImS8, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_U8Ptr']
pub fn im_plot_plot_heatmap_u8_ptr(label_id &i8, values &ImU8, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_S16Ptr']
pub fn im_plot_plot_heatmap_s16_ptr(label_id &i8, values &ImS16, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_U16Ptr']
pub fn im_plot_plot_heatmap_u16_ptr(label_id &i8, values &ImU16, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_S32Ptr']
pub fn im_plot_plot_heatmap_s32_ptr(label_id &i8, values &ImS32, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_U32Ptr']
pub fn im_plot_plot_heatmap_u32_ptr(label_id &i8, values &ImU32, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_S64Ptr']
pub fn im_plot_plot_heatmap_s64_ptr(label_id &i8, values &ImS64, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHeatmap_U64Ptr']
pub fn im_plot_plot_heatmap_u64_ptr(label_id &i8, values &ImU64, rows int, cols int, scale_min f64, scale_max f64, label_fmt &i8, bounds_min ImPlotPoint, bounds_max ImPlotPoint, flags ImPlotHeatmapFlags)

@[c: 'ImPlot_PlotHistogram_FloatPtr']
pub fn im_plot_plot_histogram_float_ptr(label_id &i8, values &f32, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_doublePtr']
pub fn im_plot_plot_histogram_double_ptr(label_id &i8, values &f64, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_S8Ptr']
pub fn im_plot_plot_histogram_s8_ptr(label_id &i8, values &ImS8, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_U8Ptr']
pub fn im_plot_plot_histogram_u8_ptr(label_id &i8, values &ImU8, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_S16Ptr']
pub fn im_plot_plot_histogram_s16_ptr(label_id &i8, values &ImS16, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_U16Ptr']
pub fn im_plot_plot_histogram_u16_ptr(label_id &i8, values &ImU16, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_S32Ptr']
pub fn im_plot_plot_histogram_s32_ptr(label_id &i8, values &ImS32, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_U32Ptr']
pub fn im_plot_plot_histogram_u32_ptr(label_id &i8, values &ImU32, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_S64Ptr']
pub fn im_plot_plot_histogram_s64_ptr(label_id &i8, values &ImS64, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram_U64Ptr']
pub fn im_plot_plot_histogram_u64_ptr(label_id &i8, values &ImU64, count int, bins int, bar_scale f64, range ImPlotRange, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_FloatPtr']
pub fn im_plot_plot_histogram2_d_float_ptr(label_id &i8, xs &f32, ys &f32, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_doublePtr']
pub fn im_plot_plot_histogram2_d_double_ptr(label_id &i8, xs &f64, ys &f64, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_S8Ptr']
pub fn im_plot_plot_histogram2_d_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_U8Ptr']
pub fn im_plot_plot_histogram2_d_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_S16Ptr']
pub fn im_plot_plot_histogram2_d_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_U16Ptr']
pub fn im_plot_plot_histogram2_d_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_S32Ptr']
pub fn im_plot_plot_histogram2_d_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_U32Ptr']
pub fn im_plot_plot_histogram2_d_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_S64Ptr']
pub fn im_plot_plot_histogram2_d_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotHistogram2D_U64Ptr']
pub fn im_plot_plot_histogram2_d_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, x_bins int, y_bins int, range ImPlotRect, flags ImPlotHistogramFlags) f64

@[c: 'ImPlot_PlotDigital_FloatPtr']
pub fn im_plot_plot_digital_float_ptr(label_id &i8, xs &f32, ys &f32, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_doublePtr']
pub fn im_plot_plot_digital_double_ptr(label_id &i8, xs &f64, ys &f64, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_S8Ptr']
pub fn im_plot_plot_digital_s8_ptr(label_id &i8, xs &ImS8, ys &ImS8, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_U8Ptr']
pub fn im_plot_plot_digital_u8_ptr(label_id &i8, xs &ImU8, ys &ImU8, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_S16Ptr']
pub fn im_plot_plot_digital_s16_ptr(label_id &i8, xs &ImS16, ys &ImS16, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_U16Ptr']
pub fn im_plot_plot_digital_u16_ptr(label_id &i8, xs &ImU16, ys &ImU16, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_S32Ptr']
pub fn im_plot_plot_digital_s32_ptr(label_id &i8, xs &ImS32, ys &ImS32, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_U32Ptr']
pub fn im_plot_plot_digital_u32_ptr(label_id &i8, xs &ImU32, ys &ImU32, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_S64Ptr']
pub fn im_plot_plot_digital_s64_ptr(label_id &i8, xs &ImS64, ys &ImS64, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigital_U64Ptr']
pub fn im_plot_plot_digital_u64_ptr(label_id &i8, xs &ImU64, ys &ImU64, count int, flags ImPlotDigitalFlags, offset int, stride int)

@[c: 'ImPlot_PlotDigitalG']
pub fn im_plot_plot_digital_g(label_id &i8, getter ImPlotPoint_getter, data voidptr, count int, flags ImPlotDigitalFlags)

// custom generation
@[c: 'ImPlot_PlotImage']
pub fn im_plot_plot_image(label_id &i8, user_texture_id ImTextureID, bounds_min ImPlotPoint, bounds_max ImPlotPoint, uv0 ImVec2, uv1 ImVec2, tint_col ImVec4, flags ImPlotImageFlags)

@[c: 'ImPlot_PlotText']
pub fn im_plot_plot_text(text &i8, x f64, y f64, pix_offset ImVec2, flags ImPlotTextFlags)

@[c: 'ImPlot_PlotDummy']
pub fn im_plot_plot_dummy(label_id &i8, flags ImPlotDummyFlags)

@[c: 'ImPlot_DragPoint']
pub fn im_plot_drag_point(id int, x &f64, y &f64, col ImVec4, size f32, flags ImPlotDragToolFlags, out_clicked &bool, out_hovered &bool, held &bool) bool

@[c: 'ImPlot_DragLineX']
pub fn im_plot_drag_line_x(id int, x &f64, col ImVec4, thickness f32, flags ImPlotDragToolFlags, out_clicked &bool, out_hovered &bool, held &bool) bool

@[c: 'ImPlot_DragLineY']
pub fn im_plot_drag_line_y(id int, y &f64, col ImVec4, thickness f32, flags ImPlotDragToolFlags, out_clicked &bool, out_hovered &bool, held &bool) bool

@[c: 'ImPlot_DragRect']
pub fn im_plot_drag_rect(id int, x1 &f64, y1 &f64, x2 &f64, y2 &f64, col ImVec4, flags ImPlotDragToolFlags, out_clicked &bool, out_hovered &bool, held &bool) bool

@[c: 'ImPlot_Annotation_Bool']
pub fn im_plot_annotation_bool(x f64, y f64, col ImVec4, pix_offset ImVec2, clamp bool, round bool)

@[c: 'ImPlot_Annotation_Str']
@[c2v_variadic]
pub fn im_plot_annotation_str(x f64, y f64, col ImVec4, pix_offset ImVec2, clamp bool, fmt ...&i8)

@[c: 'ImPlot_AnnotationV']
pub fn im_plot_annotation_v(x f64, y f64, col ImVec4, pix_offset ImVec2, clamp bool, fmt &i8, args Va_list)

@[c: 'ImPlot_TagX_Bool']
pub fn im_plot_tag_x_bool(x f64, col ImVec4, round bool)

@[c: 'ImPlot_TagX_Str']
@[c2v_variadic]
pub fn im_plot_tag_x_str(x f64, col ImVec4, fmt ...&i8)

@[c: 'ImPlot_TagXV']
pub fn im_plot_tag_xv(x f64, col ImVec4, fmt &i8, args Va_list)

@[c: 'ImPlot_TagY_Bool']
pub fn im_plot_tag_y_bool(y f64, col ImVec4, round bool)

@[c: 'ImPlot_TagY_Str']
@[c2v_variadic]
pub fn im_plot_tag_y_str(y f64, col ImVec4, fmt ...&i8)

@[c: 'ImPlot_TagYV']
pub fn im_plot_tag_yv(y f64, col ImVec4, fmt &i8, args Va_list)

@[c: 'ImPlot_SetAxis']
pub fn im_plot_set_axis(axis ImAxis)

@[c: 'ImPlot_SetAxes']
pub fn im_plot_set_axes(x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_PixelsToPlot_Vec2']
pub fn im_plot_pixels_to_plot_vec2(p_out &ImPlotPoint, pix ImVec2, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_PixelsToPlot_Float']
pub fn im_plot_pixels_to_plot_float(p_out &ImPlotPoint, x f32, y f32, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_PlotToPixels_PlotPoInt']
pub fn im_plot_plot_to_pixels_plot_po_int(p_out &ImVec2, plt ImPlotPoint, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_PlotToPixels_double']
pub fn im_plot_plot_to_pixels_double(p_out &ImVec2, x f64, y f64, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_GetPlotPos']
pub fn im_plot_get_plot_pos(p_out &ImVec2)

@[c: 'ImPlot_GetPlotSize']
pub fn im_plot_get_plot_size(p_out &ImVec2)

@[c: 'ImPlot_GetPlotMousePos']
pub fn im_plot_get_plot_mouse_pos(p_out &ImPlotPoint, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_GetPlotLimits']
pub fn im_plot_get_plot_limits(p_out &ImPlotRect, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_IsPlotHovered']
pub fn im_plot_is_plot_hovered() bool

@[c: 'ImPlot_IsAxisHovered']
pub fn im_plot_is_axis_hovered(axis ImAxis) bool

@[c: 'ImPlot_IsSubplotsHovered']
pub fn im_plot_is_subplots_hovered() bool

@[c: 'ImPlot_IsPlotSelected']
pub fn im_plot_is_plot_selected() bool

@[c: 'ImPlot_GetPlotSelection']
pub fn im_plot_get_plot_selection(p_out &ImPlotRect, x_axis ImAxis, y_axis ImAxis)

@[c: 'ImPlot_CancelPlotSelection']
pub fn im_plot_cancel_plot_selection()

@[c: 'ImPlot_HideNextItem']
pub fn im_plot_hide_next_item(hidden bool, cond ImPlotCond)

@[c: 'ImPlot_BeginAlignedPlots']
pub fn im_plot_begin_aligned_plots(group_id &i8, vertical bool) bool

@[c: 'ImPlot_EndAlignedPlots']
pub fn im_plot_end_aligned_plots()

@[c: 'ImPlot_BeginLegendPopup']
pub fn im_plot_begin_legend_popup(label_id &i8, mouse_button MouseButton) bool

@[c: 'ImPlot_EndLegendPopup']
pub fn im_plot_end_legend_popup()

@[c: 'ImPlot_IsLegendEntryHovered']
pub fn im_plot_is_legend_entry_hovered(label_id &i8) bool

@[c: 'ImPlot_BeginDragDropTargetPlot']
pub fn im_plot_begin_drag_drop_target_plot() bool

@[c: 'ImPlot_BeginDragDropTargetAxis']
pub fn im_plot_begin_drag_drop_target_axis(axis ImAxis) bool

@[c: 'ImPlot_BeginDragDropTargetLegend']
pub fn im_plot_begin_drag_drop_target_legend() bool

@[c: 'ImPlot_EndDragDropTarget']
pub fn im_plot_end_drag_drop_target()

@[c: 'ImPlot_BeginDragDropSourcePlot']
pub fn im_plot_begin_drag_drop_source_plot(flags DragDropFlags) bool

@[c: 'ImPlot_BeginDragDropSourceAxis']
pub fn im_plot_begin_drag_drop_source_axis(axis ImAxis, flags DragDropFlags) bool

@[c: 'ImPlot_BeginDragDropSourceItem']
pub fn im_plot_begin_drag_drop_source_item(label_id &i8, flags DragDropFlags) bool

@[c: 'ImPlot_EndDragDropSource']
pub fn im_plot_end_drag_drop_source()

@[c: 'ImPlot_GetStyle']
pub fn im_plot_get_style() &ImPlotStyle

@[c: 'ImPlot_StyleColorsAuto']
pub fn im_plot_style_colors_auto(dst &ImPlotStyle)

@[c: 'ImPlot_StyleColorsClassic']
pub fn im_plot_style_colors_classic(dst &ImPlotStyle)

@[c: 'ImPlot_StyleColorsDark']
pub fn im_plot_style_colors_dark(dst &ImPlotStyle)

@[c: 'ImPlot_StyleColorsLight']
pub fn im_plot_style_colors_light(dst &ImPlotStyle)

@[c: 'ImPlot_PushStyleColor_U32']
pub fn im_plot_push_style_color_u32(idx ImPlotCol, col ImU32)

@[c: 'ImPlot_PushStyleColor_Vec4']
pub fn im_plot_push_style_color_vec4(idx ImPlotCol, col ImVec4)

@[c: 'ImPlot_PopStyleColor']
pub fn im_plot_pop_style_color(count int)

@[c: 'ImPlot_PushStyleVar_Float']
pub fn im_plot_push_style_var_float(idx ImPlotStyleVar, val f32)

@[c: 'ImPlot_PushStyleVar_Int']
pub fn im_plot_push_style_var_int(idx ImPlotStyleVar, val int)

@[c: 'ImPlot_PushStyleVar_Vec2']
pub fn im_plot_push_style_var_vec2(idx ImPlotStyleVar, val ImVec2)

@[c: 'ImPlot_PopStyleVar']
pub fn im_plot_pop_style_var(count int)

@[c: 'ImPlot_SetNextLineStyle']
pub fn im_plot_set_next_line_style(col ImVec4, weight f32)

@[c: 'ImPlot_SetNextFillStyle']
pub fn im_plot_set_next_fill_style(col ImVec4, alpha_mod f32)

@[c: 'ImPlot_SetNextMarkerStyle']
pub fn im_plot_set_next_marker_style(marker ImPlotMarker, size f32, fill ImVec4, weight f32, outline ImVec4)

@[c: 'ImPlot_SetNextErrorBarStyle']
pub fn im_plot_set_next_error_bar_style(col ImVec4, size f32, weight f32)

@[c: 'ImPlot_GetLastItemColor']
pub fn im_plot_get_last_item_color(p_out &ImVec4)

@[c: 'ImPlot_GetStyleColorName']
pub fn im_plot_get_style_color_name(idx ImPlotCol) &i8

@[c: 'ImPlot_GetMarkerName']
pub fn im_plot_get_marker_name(idx ImPlotMarker) &i8

@[c: 'ImPlot_AddColormap_Vec4Ptr']
pub fn im_plot_add_colormap_vec4_ptr(name &i8, cols &ImVec4, size int, qual bool) ImPlotColormap

@[c: 'ImPlot_AddColormap_U32Ptr']
pub fn im_plot_add_colormap_u32_ptr(name &i8, cols &ImU32, size int, qual bool) ImPlotColormap

@[c: 'ImPlot_GetColormapCount']
pub fn im_plot_get_colormap_count() int

@[c: 'ImPlot_GetColormapName']
pub fn im_plot_get_colormap_name(cmap ImPlotColormap) &i8

@[c: 'ImPlot_GetColormapIndex']
pub fn im_plot_get_colormap_index(name &i8) ImPlotColormap

@[c: 'ImPlot_PushColormap_PlotColormap']
pub fn im_plot_push_colormap_plot_colormap(cmap ImPlotColormap)

@[c: 'ImPlot_PushColormap_Str']
pub fn im_plot_push_colormap_str(name &i8)

@[c: 'ImPlot_PopColormap']
pub fn im_plot_pop_colormap(count int)

@[c: 'ImPlot_NextColormapColor']
pub fn im_plot_next_colormap_color(p_out &ImVec4)

@[c: 'ImPlot_GetColormapSize']
pub fn im_plot_get_colormap_size(cmap ImPlotColormap) int

@[c: 'ImPlot_GetColormapColor']
pub fn im_plot_get_colormap_color(p_out &ImVec4, idx int, cmap ImPlotColormap)

@[c: 'ImPlot_SampleColormap']
pub fn im_plot_sample_colormap(p_out &ImVec4, t f32, cmap ImPlotColormap)

@[c: 'ImPlot_ColormapScale']
pub fn im_plot_colormap_scale(label &i8, scale_min f64, scale_max f64, size ImVec2, format &i8, flags ImPlotColormapScaleFlags, cmap ImPlotColormap)

@[c: 'ImPlot_ColormapSlider']
pub fn im_plot_colormap_slider(label &i8, t &f32, out &ImVec4, format &i8, cmap ImPlotColormap) bool

@[c: 'ImPlot_ColormapButton']
pub fn im_plot_colormap_button(label &i8, size ImVec2, cmap ImPlotColormap) bool

@[c: 'ImPlot_BustColorCache']
pub fn im_plot_bust_color_cache(plot_title_id &i8)

@[c: 'ImPlot_GetInputMap']
pub fn im_plot_get_input_map() &ImPlotInputMap

@[c: 'ImPlot_MapInputDefault']
pub fn im_plot_map_input_default(dst &ImPlotInputMap)

@[c: 'ImPlot_MapInputReverse']
pub fn im_plot_map_input_reverse(dst &ImPlotInputMap)

@[c: 'ImPlot_ItemIcon_Vec4']
pub fn im_plot_item_icon_vec4(col ImVec4)

@[c: 'ImPlot_ItemIcon_U32']
pub fn im_plot_item_icon_u32(col ImU32)

@[c: 'ImPlot_ColormapIcon']
pub fn im_plot_colormap_icon(cmap ImPlotColormap)

@[c: 'ImPlot_GetPlotDrawList']
pub fn im_plot_get_plot_draw_list() &ImDrawList

@[c: 'ImPlot_PushPlotClipRect']
pub fn im_plot_push_plot_clip_rect(expand f32)

@[c: 'ImPlot_PopPlotClipRect']
pub fn im_plot_pop_plot_clip_rect()

@[c: 'ImPlot_ShowStyleSelector']
pub fn im_plot_show_style_selector(label &i8) bool

@[c: 'ImPlot_ShowColormapSelector']
pub fn im_plot_show_colormap_selector(label &i8) bool

@[c: 'ImPlot_ShowInputMapSelector']
pub fn im_plot_show_input_map_selector(label &i8) bool

@[c: 'ImPlot_ShowStyleEditor']
pub fn im_plot_show_style_editor(ref &ImPlotStyle)

@[c: 'ImPlot_ShowUserGuide']
pub fn im_plot_show_user_guide()

@[c: 'ImPlot_ShowMetricsWindow']
pub fn im_plot_show_metrics_window(p_popen &bool)

@[c: 'ImPlot_ShowDemoWindow']
pub fn im_plot_show_demo_window(p_open &bool)

@[c: 'ImPlot_ImLog10_Float']
pub fn im_plot_im_log10_float(x f32) f32

@[c: 'ImPlot_ImLog10_double']
pub fn im_plot_im_log10_double(x f64) f64

@[c: 'ImPlot_ImSinh_Float']
pub fn im_plot_im_sinh_float(x f32) f32

@[c: 'ImPlot_ImSinh_double']
pub fn im_plot_im_sinh_double(x f64) f64

@[c: 'ImPlot_ImAsinh_Float']
pub fn im_plot_im_asinh_float(x f32) f32

@[c: 'ImPlot_ImAsinh_double']
pub fn im_plot_im_asinh_double(x f64) f64

@[c: 'ImPlot_ImRemap_Float']
pub fn im_plot_im_remap_float(x f32, x0 f32, x1 f32, y0 f32, y1 f32) f32

@[c: 'ImPlot_ImRemap_double']
pub fn im_plot_im_remap_double(x f64, x0 f64, x1 f64, y0 f64, y1 f64) f64

@[c: 'ImPlot_ImRemap_S8']
pub fn im_plot_im_remap_s8(x ImS8, x0 ImS8, x1 ImS8, y0 ImS8, y1 ImS8) ImS8

@[c: 'ImPlot_ImRemap_U8']
pub fn im_plot_im_remap_u8(x ImU8, x0 ImU8, x1 ImU8, y0 ImU8, y1 ImU8) ImU8

@[c: 'ImPlot_ImRemap_S16']
pub fn im_plot_im_remap_s16(x ImS16, x0 ImS16, x1 ImS16, y0 ImS16, y1 ImS16) ImS16

@[c: 'ImPlot_ImRemap_U16']
pub fn im_plot_im_remap_u16(x ImU16, x0 ImU16, x1 ImU16, y0 ImU16, y1 ImU16) ImU16

@[c: 'ImPlot_ImRemap_S32']
pub fn im_plot_im_remap_s32(x ImS32, x0 ImS32, x1 ImS32, y0 ImS32, y1 ImS32) ImS32

@[c: 'ImPlot_ImRemap_U32']
pub fn im_plot_im_remap_u32(x ImU32, x0 ImU32, x1 ImU32, y0 ImU32, y1 ImU32) ImU32

@[c: 'ImPlot_ImRemap_S64']
pub fn im_plot_im_remap_s64(x ImS64, x0 ImS64, x1 ImS64, y0 ImS64, y1 ImS64) ImS64

@[c: 'ImPlot_ImRemap_U64']
pub fn im_plot_im_remap_u64(x ImU64, x0 ImU64, x1 ImU64, y0 ImU64, y1 ImU64) ImU64

@[c: 'ImPlot_ImRemap01_Float']
pub fn im_plot_im_remap01_float(x f32, x0 f32, x1 f32) f32

@[c: 'ImPlot_ImRemap01_double']
pub fn im_plot_im_remap01_double(x f64, x0 f64, x1 f64) f64

@[c: 'ImPlot_ImRemap01_S8']
pub fn im_plot_im_remap01_s8(x ImS8, x0 ImS8, x1 ImS8) ImS8

@[c: 'ImPlot_ImRemap01_U8']
pub fn im_plot_im_remap01_u8(x ImU8, x0 ImU8, x1 ImU8) ImU8

@[c: 'ImPlot_ImRemap01_S16']
pub fn im_plot_im_remap01_s16(x ImS16, x0 ImS16, x1 ImS16) ImS16

@[c: 'ImPlot_ImRemap01_U16']
pub fn im_plot_im_remap01_u16(x ImU16, x0 ImU16, x1 ImU16) ImU16

@[c: 'ImPlot_ImRemap01_S32']
pub fn im_plot_im_remap01_s32(x ImS32, x0 ImS32, x1 ImS32) ImS32

@[c: 'ImPlot_ImRemap01_U32']
pub fn im_plot_im_remap01_u32(x ImU32, x0 ImU32, x1 ImU32) ImU32

@[c: 'ImPlot_ImRemap01_S64']
pub fn im_plot_im_remap01_s64(x ImS64, x0 ImS64, x1 ImS64) ImS64

@[c: 'ImPlot_ImRemap01_U64']
pub fn im_plot_im_remap01_u64(x ImU64, x0 ImU64, x1 ImU64) ImU64

@[c: 'ImPlot_ImPosMod']
pub fn im_plot_im_pos_mod(l int, r int) int

@[c: 'ImPlot_ImNan']
pub fn im_plot_im_nan(val f64) bool

@[c: 'ImPlot_ImNanOrInf']
pub fn im_plot_im_nan_or_inf(val f64) bool

@[c: 'ImPlot_ImConstrainNan']
pub fn im_plot_im_constrain_nan(val f64) f64

@[c: 'ImPlot_ImConstrainInf']
pub fn im_plot_im_constrain_inf(val f64) f64

@[c: 'ImPlot_ImConstrainLog']
pub fn im_plot_im_constrain_log(val f64) f64

@[c: 'ImPlot_ImConstrainTime']
pub fn im_plot_im_constrain_time(val f64) f64

@[c: 'ImPlot_ImAlmostEqual']
pub fn im_plot_im_almost_equal(v1 f64, v2 f64, ulp int) bool

@[c: 'ImPlot_ImMinArray_FloatPtr']
pub fn im_plot_im_min_array_float_ptr(values &f32, count int) f32

@[c: 'ImPlot_ImMinArray_doublePtr']
pub fn im_plot_im_min_array_double_ptr(values &f64, count int) f64

@[c: 'ImPlot_ImMinArray_S8Ptr']
pub fn im_plot_im_min_array_s8_ptr(values &ImS8, count int) ImS8

@[c: 'ImPlot_ImMinArray_U8Ptr']
pub fn im_plot_im_min_array_u8_ptr(values &ImU8, count int) ImU8

@[c: 'ImPlot_ImMinArray_S16Ptr']
pub fn im_plot_im_min_array_s16_ptr(values &ImS16, count int) ImS16

@[c: 'ImPlot_ImMinArray_U16Ptr']
pub fn im_plot_im_min_array_u16_ptr(values &ImU16, count int) ImU16

@[c: 'ImPlot_ImMinArray_S32Ptr']
pub fn im_plot_im_min_array_s32_ptr(values &ImS32, count int) ImS32

@[c: 'ImPlot_ImMinArray_U32Ptr']
pub fn im_plot_im_min_array_u32_ptr(values &ImU32, count int) ImU32

@[c: 'ImPlot_ImMinArray_S64Ptr']
pub fn im_plot_im_min_array_s64_ptr(values &ImS64, count int) ImS64

@[c: 'ImPlot_ImMinArray_U64Ptr']
pub fn im_plot_im_min_array_u64_ptr(values &ImU64, count int) ImU64

@[c: 'ImPlot_ImMaxArray_FloatPtr']
pub fn im_plot_im_max_array_float_ptr(values &f32, count int) f32

@[c: 'ImPlot_ImMaxArray_doublePtr']
pub fn im_plot_im_max_array_double_ptr(values &f64, count int) f64

@[c: 'ImPlot_ImMaxArray_S8Ptr']
pub fn im_plot_im_max_array_s8_ptr(values &ImS8, count int) ImS8

@[c: 'ImPlot_ImMaxArray_U8Ptr']
pub fn im_plot_im_max_array_u8_ptr(values &ImU8, count int) ImU8

@[c: 'ImPlot_ImMaxArray_S16Ptr']
pub fn im_plot_im_max_array_s16_ptr(values &ImS16, count int) ImS16

@[c: 'ImPlot_ImMaxArray_U16Ptr']
pub fn im_plot_im_max_array_u16_ptr(values &ImU16, count int) ImU16

@[c: 'ImPlot_ImMaxArray_S32Ptr']
pub fn im_plot_im_max_array_s32_ptr(values &ImS32, count int) ImS32

@[c: 'ImPlot_ImMaxArray_U32Ptr']
pub fn im_plot_im_max_array_u32_ptr(values &ImU32, count int) ImU32

@[c: 'ImPlot_ImMaxArray_S64Ptr']
pub fn im_plot_im_max_array_s64_ptr(values &ImS64, count int) ImS64

@[c: 'ImPlot_ImMaxArray_U64Ptr']
pub fn im_plot_im_max_array_u64_ptr(values &ImU64, count int) ImU64

@[c: 'ImPlot_ImMinMaxArray_FloatPtr']
pub fn im_plot_im_min_max_array_float_ptr(values &f32, count int, min_out &f32, max_out &f32)

@[c: 'ImPlot_ImMinMaxArray_doublePtr']
pub fn im_plot_im_min_max_array_double_ptr(values &f64, count int, min_out &f64, max_out &f64)

@[c: 'ImPlot_ImMinMaxArray_S8Ptr']
pub fn im_plot_im_min_max_array_s8_ptr(values &ImS8, count int, min_out &ImS8, max_out &ImS8)

@[c: 'ImPlot_ImMinMaxArray_U8Ptr']
pub fn im_plot_im_min_max_array_u8_ptr(values &ImU8, count int, min_out &ImU8, max_out &ImU8)

@[c: 'ImPlot_ImMinMaxArray_S16Ptr']
pub fn im_plot_im_min_max_array_s16_ptr(values &ImS16, count int, min_out &ImS16, max_out &ImS16)

@[c: 'ImPlot_ImMinMaxArray_U16Ptr']
pub fn im_plot_im_min_max_array_u16_ptr(values &ImU16, count int, min_out &ImU16, max_out &ImU16)

@[c: 'ImPlot_ImMinMaxArray_S32Ptr']
pub fn im_plot_im_min_max_array_s32_ptr(values &ImS32, count int, min_out &ImS32, max_out &ImS32)

@[c: 'ImPlot_ImMinMaxArray_U32Ptr']
pub fn im_plot_im_min_max_array_u32_ptr(values &ImU32, count int, min_out &ImU32, max_out &ImU32)

@[c: 'ImPlot_ImMinMaxArray_S64Ptr']
pub fn im_plot_im_min_max_array_s64_ptr(values &ImS64, count int, min_out &ImS64, max_out &ImS64)

@[c: 'ImPlot_ImMinMaxArray_U64Ptr']
pub fn im_plot_im_min_max_array_u64_ptr(values &ImU64, count int, min_out &ImU64, max_out &ImU64)

@[c: 'ImPlot_ImSum_FloatPtr']
pub fn im_plot_im_sum_float_ptr(values &f32, count int) f32

@[c: 'ImPlot_ImSum_doublePtr']
pub fn im_plot_im_sum_double_ptr(values &f64, count int) f64

@[c: 'ImPlot_ImSum_S8Ptr']
pub fn im_plot_im_sum_s8_ptr(values &ImS8, count int) ImS8

@[c: 'ImPlot_ImSum_U8Ptr']
pub fn im_plot_im_sum_u8_ptr(values &ImU8, count int) ImU8

@[c: 'ImPlot_ImSum_S16Ptr']
pub fn im_plot_im_sum_s16_ptr(values &ImS16, count int) ImS16

@[c: 'ImPlot_ImSum_U16Ptr']
pub fn im_plot_im_sum_u16_ptr(values &ImU16, count int) ImU16

@[c: 'ImPlot_ImSum_S32Ptr']
pub fn im_plot_im_sum_s32_ptr(values &ImS32, count int) ImS32

@[c: 'ImPlot_ImSum_U32Ptr']
pub fn im_plot_im_sum_u32_ptr(values &ImU32, count int) ImU32

@[c: 'ImPlot_ImSum_S64Ptr']
pub fn im_plot_im_sum_s64_ptr(values &ImS64, count int) ImS64

@[c: 'ImPlot_ImSum_U64Ptr']
pub fn im_plot_im_sum_u64_ptr(values &ImU64, count int) ImU64

@[c: 'ImPlot_ImMean_FloatPtr']
pub fn im_plot_im_mean_float_ptr(values &f32, count int) f64

@[c: 'ImPlot_ImMean_doublePtr']
pub fn im_plot_im_mean_double_ptr(values &f64, count int) f64

@[c: 'ImPlot_ImMean_S8Ptr']
pub fn im_plot_im_mean_s8_ptr(values &ImS8, count int) f64

@[c: 'ImPlot_ImMean_U8Ptr']
pub fn im_plot_im_mean_u8_ptr(values &ImU8, count int) f64

@[c: 'ImPlot_ImMean_S16Ptr']
pub fn im_plot_im_mean_s16_ptr(values &ImS16, count int) f64

@[c: 'ImPlot_ImMean_U16Ptr']
pub fn im_plot_im_mean_u16_ptr(values &ImU16, count int) f64

@[c: 'ImPlot_ImMean_S32Ptr']
pub fn im_plot_im_mean_s32_ptr(values &ImS32, count int) f64

@[c: 'ImPlot_ImMean_U32Ptr']
pub fn im_plot_im_mean_u32_ptr(values &ImU32, count int) f64

@[c: 'ImPlot_ImMean_S64Ptr']
pub fn im_plot_im_mean_s64_ptr(values &ImS64, count int) f64

@[c: 'ImPlot_ImMean_U64Ptr']
pub fn im_plot_im_mean_u64_ptr(values &ImU64, count int) f64

@[c: 'ImPlot_ImStdDev_FloatPtr']
pub fn im_plot_im_std_dev_float_ptr(values &f32, count int) f64

@[c: 'ImPlot_ImStdDev_doublePtr']
pub fn im_plot_im_std_dev_double_ptr(values &f64, count int) f64

@[c: 'ImPlot_ImStdDev_S8Ptr']
pub fn im_plot_im_std_dev_s8_ptr(values &ImS8, count int) f64

@[c: 'ImPlot_ImStdDev_U8Ptr']
pub fn im_plot_im_std_dev_u8_ptr(values &ImU8, count int) f64

@[c: 'ImPlot_ImStdDev_S16Ptr']
pub fn im_plot_im_std_dev_s16_ptr(values &ImS16, count int) f64

@[c: 'ImPlot_ImStdDev_U16Ptr']
pub fn im_plot_im_std_dev_u16_ptr(values &ImU16, count int) f64

@[c: 'ImPlot_ImStdDev_S32Ptr']
pub fn im_plot_im_std_dev_s32_ptr(values &ImS32, count int) f64

@[c: 'ImPlot_ImStdDev_U32Ptr']
pub fn im_plot_im_std_dev_u32_ptr(values &ImU32, count int) f64

@[c: 'ImPlot_ImStdDev_S64Ptr']
pub fn im_plot_im_std_dev_s64_ptr(values &ImS64, count int) f64

@[c: 'ImPlot_ImStdDev_U64Ptr']
pub fn im_plot_im_std_dev_u64_ptr(values &ImU64, count int) f64

@[c: 'ImPlot_ImMixU32']
pub fn im_plot_im_mix_u32(a ImU32, b ImU32, s ImU32) ImU32

@[c: 'ImPlot_ImLerpU32']
pub fn im_plot_im_lerp_u32(colors &ImU32, size int, t f32) ImU32

@[c: 'ImPlot_ImAlphaU32']
pub fn im_plot_im_alpha_u32(col ImU32, alpha f32) ImU32

@[c: 'ImPlot_ImOverlaps_Float']
pub fn im_plot_im_overlaps_float(min_a f32, max_a f32, min_b f32, max_b f32) bool

@[c: 'ImPlot_ImOverlaps_double']
pub fn im_plot_im_overlaps_double(min_a f64, max_a f64, min_b f64, max_b f64) bool

@[c: 'ImPlot_ImOverlaps_S8']
pub fn im_plot_im_overlaps_s8(min_a ImS8, max_a ImS8, min_b ImS8, max_b ImS8) bool

@[c: 'ImPlot_ImOverlaps_U8']
pub fn im_plot_im_overlaps_u8(min_a ImU8, max_a ImU8, min_b ImU8, max_b ImU8) bool

@[c: 'ImPlot_ImOverlaps_S16']
pub fn im_plot_im_overlaps_s16(min_a ImS16, max_a ImS16, min_b ImS16, max_b ImS16) bool

@[c: 'ImPlot_ImOverlaps_U16']
pub fn im_plot_im_overlaps_u16(min_a ImU16, max_a ImU16, min_b ImU16, max_b ImU16) bool

@[c: 'ImPlot_ImOverlaps_S32']
pub fn im_plot_im_overlaps_s32(min_a ImS32, max_a ImS32, min_b ImS32, max_b ImS32) bool

@[c: 'ImPlot_ImOverlaps_U32']
pub fn im_plot_im_overlaps_u32(min_a ImU32, max_a ImU32, min_b ImU32, max_b ImU32) bool

@[c: 'ImPlot_ImOverlaps_S64']
pub fn im_plot_im_overlaps_s64(min_a ImS64, max_a ImS64, min_b ImS64, max_b ImS64) bool

@[c: 'ImPlot_ImOverlaps_U64']
pub fn im_plot_im_overlaps_u64(min_a ImU64, max_a ImU64, min_b ImU64, max_b ImU64) bool

@[c: 'ImPlotDateTimeSpec_ImPlotDateTimeSpec_Nil']
pub fn im_plot_date_time_spec_im_plot_date_time_spec_nil() &ImPlotDateTimeSpec

@[c: 'ImPlotDateTimeSpec_destroy']
pub fn im_plot_date_time_spec_destroy(self &ImPlotDateTimeSpec)

@[c: 'ImPlotDateTimeSpec_ImPlotDateTimeSpec_PlotDateFmt']
pub fn im_plot_date_time_spec_im_plot_date_time_spec_plot_date_fmt(date_fmt ImPlotDateFmt, time_fmt ImPlotTimeFmt, use_24_hr_clk bool, use_iso_8601 bool) &ImPlotDateTimeSpec

@[c: 'ImPlotTime_ImPlotTime_Nil']
pub fn im_plot_time_im_plot_time_nil() &ImPlotTime

@[c: 'ImPlotTime_destroy']
pub fn im_plot_time_destroy(self &ImPlotTime)

@[c: 'ImPlotTime_ImPlotTime_time_t']
pub fn im_plot_time_im_plot_time_time_t(s Time_t, us int) &ImPlotTime

@[c: 'ImPlotTime_RollOver']
pub fn im_plot_time_roll_over(self &ImPlotTime)

@[c: 'ImPlotTime_ToDouble']
pub fn im_plot_time_to_double(self &ImPlotTime) f64

@[c: 'ImPlotTime_FromDouble']
pub fn im_plot_time_from_double(p_out &ImPlotTime, t f64)

@[c: 'ImPlotColormapData_ImPlotColormapData']
pub fn im_plot_colormap_data_im_plot_colormap_data() &ImPlotColormapData

@[c: 'ImPlotColormapData_destroy']
pub fn im_plot_colormap_data_destroy(self &ImPlotColormapData)

@[c: 'ImPlotColormapData_Append']
pub fn im_plot_colormap_data_append(self &ImPlotColormapData, name &i8, keys &ImU32, count int, qual bool) int

@[c: 'ImPlotColormapData__AppendTable']
pub fn im_plot_colormap_data__append_table(self &ImPlotColormapData, cmap ImPlotColormap)

@[c: 'ImPlotColormapData_RebuildTables']
pub fn im_plot_colormap_data_rebuild_tables(self &ImPlotColormapData)

@[c: 'ImPlotColormapData_IsQual']
pub fn im_plot_colormap_data_is_qual(self &ImPlotColormapData, cmap ImPlotColormap) bool

@[c: 'ImPlotColormapData_GetName']
pub fn im_plot_colormap_data_get_name(self &ImPlotColormapData, cmap ImPlotColormap) &i8

@[c: 'ImPlotColormapData_GetIndex']
pub fn im_plot_colormap_data_get_index(self &ImPlotColormapData, name &i8) ImPlotColormap

@[c: 'ImPlotColormapData_GetKeys']
pub fn im_plot_colormap_data_get_keys(self &ImPlotColormapData, cmap ImPlotColormap) &ImU32

@[c: 'ImPlotColormapData_GetKeyCount']
pub fn im_plot_colormap_data_get_key_count(self &ImPlotColormapData, cmap ImPlotColormap) int

@[c: 'ImPlotColormapData_GetKeyColor']
pub fn im_plot_colormap_data_get_key_color(self &ImPlotColormapData, cmap ImPlotColormap, idx int) ImU32

@[c: 'ImPlotColormapData_SetKeyColor']
pub fn im_plot_colormap_data_set_key_color(self &ImPlotColormapData, cmap ImPlotColormap, idx int, value ImU32)

@[c: 'ImPlotColormapData_GetTable']
pub fn im_plot_colormap_data_get_table(self &ImPlotColormapData, cmap ImPlotColormap) &ImU32

@[c: 'ImPlotColormapData_GetTableSize']
pub fn im_plot_colormap_data_get_table_size(self &ImPlotColormapData, cmap ImPlotColormap) int

@[c: 'ImPlotColormapData_GetTableColor']
pub fn im_plot_colormap_data_get_table_color(self &ImPlotColormapData, cmap ImPlotColormap, idx int) ImU32

@[c: 'ImPlotColormapData_LerpTable']
pub fn im_plot_colormap_data_lerp_table(self &ImPlotColormapData, cmap ImPlotColormap, t f32) ImU32

@[c: 'ImPlotPointError_ImPlotPointError']
pub fn im_plot_point_error_im_plot_point_error(x f64, y f64, neg f64, pos f64) &ImPlotPointError

@[c: 'ImPlotPointError_destroy']
pub fn im_plot_point_error_destroy(self &ImPlotPointError)

@[c: 'ImPlotAnnotation_ImPlotAnnotation']
pub fn im_plot_annotation_im_plot_annotation() &ImPlotAnnotation

@[c: 'ImPlotAnnotation_destroy']
pub fn im_plot_annotation_destroy(self &ImPlotAnnotation)

@[c: 'ImPlotAnnotationCollection_ImPlotAnnotationCollection']
pub fn im_plot_annotation_collection_im_plot_annotation_collection() &ImPlotAnnotationCollection

@[c: 'ImPlotAnnotationCollection_destroy']
pub fn im_plot_annotation_collection_destroy(self &ImPlotAnnotationCollection)

@[c: 'ImPlotAnnotationCollection_AppendV']
pub fn im_plot_annotation_collection_append_v(self &ImPlotAnnotationCollection, pos ImVec2, off ImVec2, bg ImU32, fg ImU32, clamp bool, fmt &i8, args Va_list)

@[c: 'ImPlotAnnotationCollection_Append']
@[c2v_variadic]
pub fn im_plot_annotation_collection_append(self &ImPlotAnnotationCollection, pos ImVec2, off ImVec2, bg ImU32, fg ImU32, clamp bool, fmt ...&i8)

@[c: 'ImPlotAnnotationCollection_GetText']
pub fn im_plot_annotation_collection_get_text(self &ImPlotAnnotationCollection, idx int) &i8

@[c: 'ImPlotAnnotationCollection_Reset']
pub fn im_plot_annotation_collection_reset(self &ImPlotAnnotationCollection)

@[c: 'ImPlotTagCollection_ImPlotTagCollection']
pub fn im_plot_tag_collection_im_plot_tag_collection() &ImPlotTagCollection

@[c: 'ImPlotTagCollection_destroy']
pub fn im_plot_tag_collection_destroy(self &ImPlotTagCollection)

@[c: 'ImPlotTagCollection_AppendV']
pub fn im_plot_tag_collection_append_v(self &ImPlotTagCollection, axis ImAxis, value f64, bg ImU32, fg ImU32, fmt &i8, args Va_list)

@[c: 'ImPlotTagCollection_Append']
@[c2v_variadic]
pub fn im_plot_tag_collection_append(self &ImPlotTagCollection, axis ImAxis, value f64, bg ImU32, fg ImU32, fmt ...&i8)

@[c: 'ImPlotTagCollection_GetText']
pub fn im_plot_tag_collection_get_text(self &ImPlotTagCollection, idx int) &i8

@[c: 'ImPlotTagCollection_Reset']
pub fn im_plot_tag_collection_reset(self &ImPlotTagCollection)

@[c: 'ImPlotTick_ImPlotTick']
pub fn im_plot_tick_im_plot_tick(value f64, major bool, level int, show_label bool) &ImPlotTick

@[c: 'ImPlotTick_destroy']
pub fn im_plot_tick_destroy(self &ImPlotTick)

@[c: 'ImPlotTicker_ImPlotTicker']
pub fn im_plot_ticker_im_plot_ticker() &ImPlotTicker

@[c: 'ImPlotTicker_destroy']
pub fn im_plot_ticker_destroy(self &ImPlotTicker)

@[c: 'ImPlotTicker_AddTick_doubleStr']
pub fn im_plot_ticker_add_tick_double_str(self &ImPlotTicker, value f64, major bool, level int, show_label bool, label &i8) &ImPlotTick

@[c: 'ImPlotTicker_AddTick_doublePlotFormatter']
pub fn im_plot_ticker_add_tick_double_plot_formatter(self &ImPlotTicker, value f64, major bool, level int, show_label bool, formatter ImPlotFormatter, data voidptr) &ImPlotTick

@[c: 'ImPlotTicker_AddTick_PlotTick']
pub fn im_plot_ticker_add_tick_plot_tick(self &ImPlotTicker, tick ImPlotTick) &ImPlotTick

@[c: 'ImPlotTicker_GetText_Int']
pub fn im_plot_ticker_get_text_int(self &ImPlotTicker, idx int) &i8

@[c: 'ImPlotTicker_GetText_PlotTick']
pub fn im_plot_ticker_get_text_plot_tick(self &ImPlotTicker, tick ImPlotTick) &i8

@[c: 'ImPlotTicker_OverrideSizeLate']
pub fn im_plot_ticker_override_size_late(self &ImPlotTicker, size ImVec2)

@[c: 'ImPlotTicker_Reset']
pub fn im_plot_ticker_reset(self &ImPlotTicker)

@[c: 'ImPlotTicker_TickCount']
pub fn im_plot_ticker_tick_count(self &ImPlotTicker) int

@[c: 'ImPlotAxis_ImPlotAxis']
pub fn im_plot_axis_im_plot_axis() &ImPlotAxis

@[c: 'ImPlotAxis_destroy']
pub fn im_plot_axis_destroy(self &ImPlotAxis)

@[c: 'ImPlotAxis_Reset']
pub fn im_plot_axis_reset(self &ImPlotAxis)

@[c: 'ImPlotAxis_SetMin']
pub fn im_plot_axis_set_min(self &ImPlotAxis, _min f64, force bool) bool

@[c: 'ImPlotAxis_SetMax']
pub fn im_plot_axis_set_max(self &ImPlotAxis, _max f64, force bool) bool

@[c: 'ImPlotAxis_SetRange_double']
pub fn im_plot_axis_set_range_double(self &ImPlotAxis, v1 f64, v2 f64)

@[c: 'ImPlotAxis_SetRange_PlotRange']
pub fn im_plot_axis_set_range_plot_range(self &ImPlotAxis, range ImPlotRange)

@[c: 'ImPlotAxis_SetAspect']
pub fn im_plot_axis_set_aspect(self &ImPlotAxis, unit_per_pix f64)

@[c: 'ImPlotAxis_PixelSize']
pub fn im_plot_axis_pixel_size(self &ImPlotAxis) f32

@[c: 'ImPlotAxis_GetAspect']
pub fn im_plot_axis_get_aspect(self &ImPlotAxis) f64

@[c: 'ImPlotAxis_Constrain']
pub fn im_plot_axis_constrain(self &ImPlotAxis)

@[c: 'ImPlotAxis_UpdateTransformCache']
pub fn im_plot_axis_update_transform_cache(self &ImPlotAxis)

@[c: 'ImPlotAxis_PlotToPixels']
pub fn im_plot_axis_plot_to_pixels(self &ImPlotAxis, plt f64) f32

@[c: 'ImPlotAxis_PixelsToPlot']
pub fn im_plot_axis_pixels_to_plot(self &ImPlotAxis, pix f32) f64

@[c: 'ImPlotAxis_ExtendFit']
pub fn im_plot_axis_extend_fit(self &ImPlotAxis, v f64)

@[c: 'ImPlotAxis_ExtendFitWith']
pub fn im_plot_axis_extend_fit_with(self &ImPlotAxis, alt &ImPlotAxis, v f64, v_alt f64)

@[c: 'ImPlotAxis_ApplyFit']
pub fn im_plot_axis_apply_fit(self &ImPlotAxis, padding f32)

@[c: 'ImPlotAxis_HasLabel']
pub fn im_plot_axis_has_label(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_HasGridLines']
pub fn im_plot_axis_has_grid_lines(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_HasTickLabels']
pub fn im_plot_axis_has_tick_labels(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_HasTickMarks']
pub fn im_plot_axis_has_tick_marks(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_WillRender']
pub fn im_plot_axis_will_render(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsOpposite']
pub fn im_plot_axis_is_opposite(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsInverted']
pub fn im_plot_axis_is_inverted(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsForeground']
pub fn im_plot_axis_is_foreground(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsAutoFitting']
pub fn im_plot_axis_is_auto_fitting(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_CanInitFit']
pub fn im_plot_axis_can_init_fit(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsRangeLocked']
pub fn im_plot_axis_is_range_locked(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsLockedMin']
pub fn im_plot_axis_is_locked_min(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsLockedMax']
pub fn im_plot_axis_is_locked_max(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsLocked']
pub fn im_plot_axis_is_locked(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsInputLockedMin']
pub fn im_plot_axis_is_input_locked_min(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsInputLockedMax']
pub fn im_plot_axis_is_input_locked_max(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsInputLocked']
pub fn im_plot_axis_is_input_locked(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_HasMenus']
pub fn im_plot_axis_has_menus(self &ImPlotAxis) bool

@[c: 'ImPlotAxis_IsPanLocked']
pub fn im_plot_axis_is_pan_locked(self &ImPlotAxis, increasing bool) bool

@[c: 'ImPlotAxis_PushLinks']
pub fn im_plot_axis_push_links(self &ImPlotAxis)

@[c: 'ImPlotAxis_PullLinks']
pub fn im_plot_axis_pull_links(self &ImPlotAxis)

@[c: 'ImPlotAlignmentData_ImPlotAlignmentData']
pub fn im_plot_alignment_data_im_plot_alignment_data() &ImPlotAlignmentData

@[c: 'ImPlotAlignmentData_destroy']
pub fn im_plot_alignment_data_destroy(self &ImPlotAlignmentData)

@[c: 'ImPlotAlignmentData_Begin']
pub fn im_plot_alignment_data_begin(self &ImPlotAlignmentData)

@[c: 'ImPlotAlignmentData_Update']
pub fn im_plot_alignment_data_update(self &ImPlotAlignmentData, pad_a &f32, pad_b &f32, delta_a &f32, delta_b &f32)

@[c: 'ImPlotAlignmentData_End']
pub fn im_plot_alignment_data_end(self &ImPlotAlignmentData)

@[c: 'ImPlotAlignmentData_Reset']
pub fn im_plot_alignment_data_reset(self &ImPlotAlignmentData)

@[c: 'ImPlotItem_ImPlotItem']
pub fn im_plot_item_im_plot_item() &ImPlotItem

@[c: 'ImPlotItem_destroy']
pub fn im_plot_item_destroy(self &ImPlotItem)

@[c: 'ImPlotLegend_ImPlotLegend']
pub fn im_plot_legend_im_plot_legend() &ImPlotLegend

@[c: 'ImPlotLegend_destroy']
pub fn im_plot_legend_destroy(self &ImPlotLegend)

@[c: 'ImPlotLegend_Reset']
pub fn im_plot_legend_reset(self &ImPlotLegend)

@[c: 'ImPlotItemGroup_ImPlotItemGroup']
pub fn im_plot_item_group_im_plot_item_group() &ImPlotItemGroup

@[c: 'ImPlotItemGroup_destroy']
pub fn im_plot_item_group_destroy(self &ImPlotItemGroup)

@[c: 'ImPlotItemGroup_GetItemCount']
pub fn im_plot_item_group_get_item_count(self &ImPlotItemGroup) int

@[c: 'ImPlotItemGroup_GetItemID']
pub fn im_plot_item_group_get_item_id(self &ImPlotItemGroup, label_id &i8) ID

@[c: 'ImPlotItemGroup_GetItem_ID']
pub fn im_plot_item_group_get_item_id_vdup0(self &ImPlotItemGroup, id ID) &ImPlotItem

@[c: 'ImPlotItemGroup_GetItem_Str']
pub fn im_plot_item_group_get_item_str(self &ImPlotItemGroup, label_id &i8) &ImPlotItem

@[c: 'ImPlotItemGroup_GetOrAddItem']
pub fn im_plot_item_group_get_or_add_item(self &ImPlotItemGroup, id ID) &ImPlotItem

@[c: 'ImPlotItemGroup_GetItemByIndex']
pub fn im_plot_item_group_get_item_by_index(self &ImPlotItemGroup, i int) &ImPlotItem

@[c: 'ImPlotItemGroup_GetItemIndex']
pub fn im_plot_item_group_get_item_index(self &ImPlotItemGroup, item &ImPlotItem) int

@[c: 'ImPlotItemGroup_GetLegendCount']
pub fn im_plot_item_group_get_legend_count(self &ImPlotItemGroup) int

@[c: 'ImPlotItemGroup_GetLegendItem']
pub fn im_plot_item_group_get_legend_item(self &ImPlotItemGroup, i int) &ImPlotItem

@[c: 'ImPlotItemGroup_GetLegendLabel']
pub fn im_plot_item_group_get_legend_label(self &ImPlotItemGroup, i int) &i8

@[c: 'ImPlotItemGroup_Reset']
pub fn im_plot_item_group_reset(self &ImPlotItemGroup)

@[c: 'ImPlotPlot_ImPlotPlot']
pub fn im_plot_plot_im_plot_plot() &ImPlotPlot

@[c: 'ImPlotPlot_destroy']
pub fn im_plot_plot_destroy(self &ImPlotPlot)

@[c: 'ImPlotPlot_IsInputLocked']
pub fn im_plot_plot_is_input_locked(self &ImPlotPlot) bool

@[c: 'ImPlotPlot_ClearTextBuffer']
pub fn im_plot_plot_clear_text_buffer(self &ImPlotPlot)

@[c: 'ImPlotPlot_SetTitle']
pub fn im_plot_plot_set_title(self &ImPlotPlot, title &i8)

@[c: 'ImPlotPlot_HasTitle']
pub fn im_plot_plot_has_title(self &ImPlotPlot) bool

@[c: 'ImPlotPlot_GetTitle']
pub fn im_plot_plot_get_title(self &ImPlotPlot) &i8

@[c: 'ImPlotPlot_XAxis_Nil']
pub fn im_plot_plot_xa_xis_nil(self &ImPlotPlot, i int) &ImPlotAxis

@[c: 'ImPlotPlot_XAxis__const']
pub fn im_plot_plot_xa_xis__const(self &ImPlotPlot, i int) &ImPlotAxis

@[c: 'ImPlotPlot_YAxis_Nil']
pub fn im_plot_plot_ya_xis_nil(self &ImPlotPlot, i int) &ImPlotAxis

@[c: 'ImPlotPlot_YAxis__const']
pub fn im_plot_plot_ya_xis__const(self &ImPlotPlot, i int) &ImPlotAxis

@[c: 'ImPlotPlot_EnabledAxesX']
pub fn im_plot_plot_enabled_axes_x(self &ImPlotPlot) int

@[c: 'ImPlotPlot_EnabledAxesY']
pub fn im_plot_plot_enabled_axes_y(self &ImPlotPlot) int

@[c: 'ImPlotPlot_SetAxisLabel']
pub fn im_plot_plot_set_axis_label(self &ImPlotPlot, axis &ImPlotAxis, label &i8)

@[c: 'ImPlotPlot_GetAxisLabel']
pub fn im_plot_plot_get_axis_label(self &ImPlotPlot, axis ImPlotAxis) &i8

@[c: 'ImPlotSubplot_ImPlotSubplot']
pub fn im_plot_subplot_im_plot_subplot() &ImPlotSubplot

@[c: 'ImPlotSubplot_destroy']
pub fn im_plot_subplot_destroy(self &ImPlotSubplot)

@[c: 'ImPlotNextPlotData_ImPlotNextPlotData']
pub fn im_plot_next_plot_data_im_plot_next_plot_data() &ImPlotNextPlotData

@[c: 'ImPlotNextPlotData_destroy']
pub fn im_plot_next_plot_data_destroy(self &ImPlotNextPlotData)

@[c: 'ImPlotNextPlotData_Reset']
pub fn im_plot_next_plot_data_reset(self &ImPlotNextPlotData)

@[c: 'ImPlotNextItemData_ImPlotNextItemData']
pub fn im_plot_next_item_data_im_plot_next_item_data() &ImPlotNextItemData

@[c: 'ImPlotNextItemData_destroy']
pub fn im_plot_next_item_data_destroy(self &ImPlotNextItemData)

@[c: 'ImPlotNextItemData_Reset']
pub fn im_plot_next_item_data_reset(self &ImPlotNextItemData)

@[c: 'ImPlot_Initialize']
pub fn im_plot_initialize(ctx &ImPlotContext)

@[c: 'ImPlot_ResetCtxForNextPlot']
pub fn im_plot_reset_ctx_for_next_plot(ctx &ImPlotContext)

@[c: 'ImPlot_ResetCtxForNextAlignedPlots']
pub fn im_plot_reset_ctx_for_next_aligned_plots(ctx &ImPlotContext)

@[c: 'ImPlot_ResetCtxForNextSubplot']
pub fn im_plot_reset_ctx_for_next_subplot(ctx &ImPlotContext)

@[c: 'ImPlot_GetPlot']
pub fn im_plot_get_plot(title &i8) &ImPlotPlot

@[c: 'ImPlot_GetCurrentPlot']
pub fn im_plot_get_current_plot() &ImPlotPlot

@[c: 'ImPlot_BustPlotCache']
pub fn im_plot_bust_plot_cache()

@[c: 'ImPlot_ShowPlotContextMenu']
pub fn im_plot_show_plot_context_menu(plot &ImPlotPlot)

@[c: 'ImPlot_SetupLock']
pub fn im_plot_setup_lock()

@[c: 'ImPlot_SubplotNextCell']
pub fn im_plot_subplot_next_cell()

@[c: 'ImPlot_ShowSubplotsContextMenu']
pub fn im_plot_show_subplots_context_menu(subplot &ImPlotSubplot)

@[c: 'ImPlot_BeginItem']
pub fn im_plot_begin_item(label_id &i8, flags ImPlotItemFlags, recolor_from ImPlotCol) bool

@[c: 'ImPlot_EndItem']
pub fn im_plot_end_item()

@[c: 'ImPlot_RegisterOrGetItem']
pub fn im_plot_register_or_get_item(label_id &i8, flags ImPlotItemFlags, just_created &bool) &ImPlotItem

@[c: 'ImPlot_GetItem']
pub fn im_plot_get_item(label_id &i8) &ImPlotItem

@[c: 'ImPlot_GetCurrentItem']
pub fn im_plot_get_current_item() &ImPlotItem

@[c: 'ImPlot_BustItemCache']
pub fn im_plot_bust_item_cache()

@[c: 'ImPlot_AnyAxesInputLocked']
pub fn im_plot_any_axes_input_locked(axes &ImPlotAxis, count int) bool

@[c: 'ImPlot_AllAxesInputLocked']
pub fn im_plot_all_axes_input_locked(axes &ImPlotAxis, count int) bool

@[c: 'ImPlot_AnyAxesHeld']
pub fn im_plot_any_axes_held(axes &ImPlotAxis, count int) bool

@[c: 'ImPlot_AnyAxesHovered']
pub fn im_plot_any_axes_hovered(axes &ImPlotAxis, count int) bool

@[c: 'ImPlot_FitThisFrame']
pub fn im_plot_fit_this_frame() bool

@[c: 'ImPlot_FitPointX']
pub fn im_plot_fit_point_x(x f64)

@[c: 'ImPlot_FitPointY']
pub fn im_plot_fit_point_y(y f64)

@[c: 'ImPlot_FitPoint']
pub fn im_plot_fit_point(p ImPlotPoint)

@[c: 'ImPlot_RangesOverlap']
pub fn im_plot_ranges_overlap(r1 ImPlotRange, r2 ImPlotRange) bool

@[c: 'ImPlot_ShowAxisContextMenu']
pub fn im_plot_show_axis_context_menu(axis &ImPlotAxis, equal_axis &ImPlotAxis, time_allowed bool)

@[c: 'ImPlot_GetLocationPos']
pub fn im_plot_get_location_pos(p_out &ImVec2, outer_rect ImRect, inner_size ImVec2, location ImPlotLocation, pad ImVec2)

@[c: 'ImPlot_CalcLegendSize']
pub fn im_plot_calc_legend_size(p_out &ImVec2, items &ImPlotItemGroup, pad ImVec2, spacing ImVec2, vertical bool)

@[c: 'ImPlot_ClampLegendRect']
pub fn im_plot_clamp_legend_rect(legend_rect &ImRect, outer_rect ImRect, pad ImVec2) bool

@[c: 'ImPlot_ShowLegendEntries']
pub fn im_plot_show_legend_entries(items &ImPlotItemGroup, legend_bb ImRect, interactable bool, pad ImVec2, spacing ImVec2, vertical bool, draw_list &ImDrawList) bool

@[c: 'ImPlot_ShowAltLegend']
pub fn im_plot_show_alt_legend(title_id &i8, vertical bool, size ImVec2, interactable bool)

@[c: 'ImPlot_ShowLegendContextMenu']
pub fn im_plot_show_legend_context_menu(legend &ImPlotLegend, visible bool) bool

@[c: 'ImPlot_LabelAxisValue']
pub fn im_plot_label_axis_value(axis ImPlotAxis, value f64, buff &i8, size int, round bool)

@[c: 'ImPlot_GetItemData']
pub fn im_plot_get_item_data() &ImPlotNextItemData

@[c: 'ImPlot_IsColorAuto_Vec4']
pub fn im_plot_is_color_auto_vec4(col ImVec4) bool

@[c: 'ImPlot_IsColorAuto_PlotCol']
pub fn im_plot_is_color_auto_plot_col(idx ImPlotCol) bool

@[c: 'ImPlot_GetAutoColor']
pub fn im_plot_get_auto_color(p_out &ImVec4, idx ImPlotCol)

@[c: 'ImPlot_GetStyleColorVec4']
pub fn im_plot_get_style_color_vec4(p_out &ImVec4, idx ImPlotCol)

@[c: 'ImPlot_GetStyleColorU32']
pub fn im_plot_get_style_color_u32(idx ImPlotCol) ImU32

@[c: 'ImPlot_AddTextVertical']
pub fn im_plot_add_text_vertical(draw_list &ImDrawList, pos ImVec2, col ImU32, text_begin &i8, text_end &i8)

@[c: 'ImPlot_AddTextCentered']
pub fn im_plot_add_text_centered(draw_list &ImDrawList, top_center ImVec2, col ImU32, text_begin &i8, text_end &i8)

@[c: 'ImPlot_CalcTextSizeVertical']
pub fn im_plot_calc_text_size_vertical(p_out &ImVec2, text &i8)

@[c: 'ImPlot_CalcTextColor_Vec4']
pub fn im_plot_calc_text_color_vec4(bg ImVec4) ImU32

@[c: 'ImPlot_CalcTextColor_U32']
pub fn im_plot_calc_text_color_u32(bg ImU32) ImU32

@[c: 'ImPlot_CalcHoverColor']
pub fn im_plot_calc_hover_color(col ImU32) ImU32

@[c: 'ImPlot_ClampLabelPos']
pub fn im_plot_clamp_label_pos(p_out &ImVec2, pos ImVec2, size ImVec2, min ImVec2, max ImVec2)

@[c: 'ImPlot_GetColormapColorU32']
pub fn im_plot_get_colormap_color_u32(idx int, cmap ImPlotColormap) ImU32

@[c: 'ImPlot_NextColormapColorU32']
pub fn im_plot_next_colormap_color_u32() ImU32

@[c: 'ImPlot_SampleColormapU32']
pub fn im_plot_sample_colormap_u32(t f32, cmap ImPlotColormap) ImU32

@[c: 'ImPlot_RenderColorBar']
pub fn im_plot_render_color_bar(colors &ImU32, size int, draw_list &ImDrawList, bounds ImRect, vert bool, reversed bool, continuous bool)

@[c: 'ImPlot_NiceNum']
pub fn im_plot_nice_num(x f64, round bool) f64

@[c: 'ImPlot_OrderOfMagnitude']
pub fn im_plot_order_of_magnitude(val f64) int

@[c: 'ImPlot_OrderToPrecision']
pub fn im_plot_order_to_precision(order int) int

@[c: 'ImPlot_Precision']
pub fn im_plot_precision(val f64) int

@[c: 'ImPlot_RoundTo']
pub fn im_plot_round_to(val f64, prec int) f64

@[c: 'ImPlot_Intersection']
pub fn im_plot_intersection(p_out &ImVec2, a1 ImVec2, a2 ImVec2, b1 ImVec2, b2 ImVec2)

@[c: 'ImPlot_FillRange_Vector_Float_Ptr']
pub fn im_plot_fill_range_vector_float_ptr(buffer &ImVector_float, n int, vmin f32, vmax f32)

@[c: 'ImPlot_FillRange_Vector_double_Ptr']
pub fn im_plot_fill_range_vector_double_ptr(buffer &ImVector_double, n int, vmin f64, vmax f64)

@[c: 'ImPlot_FillRange_Vector_S8_Ptr']
pub fn im_plot_fill_range_vector_s8_ptr(buffer &ImVector_ImS8, n int, vmin ImS8, vmax ImS8)

@[c: 'ImPlot_FillRange_Vector_U8_Ptr']
pub fn im_plot_fill_range_vector_u8_ptr(buffer &ImVector_ImU8, n int, vmin ImU8, vmax ImU8)

@[c: 'ImPlot_FillRange_Vector_S16_Ptr']
pub fn im_plot_fill_range_vector_s16_ptr(buffer &ImVector_ImS16, n int, vmin ImS16, vmax ImS16)

@[c: 'ImPlot_FillRange_Vector_U16_Ptr']
pub fn im_plot_fill_range_vector_u16_ptr(buffer &ImVector_ImU16, n int, vmin ImU16, vmax ImU16)

@[c: 'ImPlot_FillRange_Vector_S32_Ptr']
pub fn im_plot_fill_range_vector_s32_ptr(buffer &ImVector_ImS32, n int, vmin ImS32, vmax ImS32)

@[c: 'ImPlot_FillRange_Vector_U32_Ptr']
pub fn im_plot_fill_range_vector_u32_ptr(buffer &ImVector_ImU32, n int, vmin ImU32, vmax ImU32)

@[c: 'ImPlot_FillRange_Vector_S64_Ptr']
pub fn im_plot_fill_range_vector_s64_ptr(buffer &ImVector_ImS64, n int, vmin ImS64, vmax ImS64)

@[c: 'ImPlot_FillRange_Vector_U64_Ptr']
pub fn im_plot_fill_range_vector_u64_ptr(buffer &ImVector_ImU64, n int, vmin ImU64, vmax ImU64)

@[c: 'ImPlot_CalculateBins_FloatPtr']
pub fn im_plot_calculate_bins_float_ptr(values &f32, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_doublePtr']
pub fn im_plot_calculate_bins_double_ptr(values &f64, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_S8Ptr']
pub fn im_plot_calculate_bins_s8_ptr(values &ImS8, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_U8Ptr']
pub fn im_plot_calculate_bins_u8_ptr(values &ImU8, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_S16Ptr']
pub fn im_plot_calculate_bins_s16_ptr(values &ImS16, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_U16Ptr']
pub fn im_plot_calculate_bins_u16_ptr(values &ImU16, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_S32Ptr']
pub fn im_plot_calculate_bins_s32_ptr(values &ImS32, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_U32Ptr']
pub fn im_plot_calculate_bins_u32_ptr(values &ImU32, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_S64Ptr']
pub fn im_plot_calculate_bins_s64_ptr(values &ImS64, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_CalculateBins_U64Ptr']
pub fn im_plot_calculate_bins_u64_ptr(values &ImU64, count int, meth ImPlotBin, range ImPlotRange, bins_out &int, width_out &f64)

@[c: 'ImPlot_IsLeapYear']
pub fn im_plot_is_leap_year(year int) bool

@[c: 'ImPlot_GetDaysInMonth']
pub fn im_plot_get_days_in_month(year int, month int) int

@[c: 'ImPlot_MkGmtTime']
pub fn im_plot_mk_gmt_time(p_out &ImPlotTime, ptm &Tm)

@[c: 'ImPlot_GetGmtTime']
pub fn im_plot_get_gmt_time(t ImPlotTime, ptm &Tm) &Tm

@[c: 'ImPlot_MkLocTime']
pub fn im_plot_mk_loc_time(p_out &ImPlotTime, ptm &Tm)

@[c: 'ImPlot_GetLocTime']
pub fn im_plot_get_loc_time(t ImPlotTime, ptm &Tm) &Tm

@[c: 'ImPlot_MkTime']
pub fn im_plot_mk_time(p_out &ImPlotTime, ptm &Tm)

@[c: 'ImPlot_GetTime']
pub fn im_plot_get_time(t ImPlotTime, ptm &Tm) &Tm

@[c: 'ImPlot_MakeTime']
pub fn im_plot_make_time(p_out &ImPlotTime, year int, month int, day int, hour int, min int, sec int, us int)

@[c: 'ImPlot_GetYear']
pub fn im_plot_get_year(t ImPlotTime) int

@[c: 'ImPlot_GetMonth']
pub fn im_plot_get_month(t ImPlotTime) int

@[c: 'ImPlot_AddTime']
pub fn im_plot_add_time(p_out &ImPlotTime, t ImPlotTime, unit ImPlotTimeUnit, count int)

@[c: 'ImPlot_FloorTime']
pub fn im_plot_floor_time(p_out &ImPlotTime, t ImPlotTime, unit ImPlotTimeUnit)

@[c: 'ImPlot_CeilTime']
pub fn im_plot_ceil_time(p_out &ImPlotTime, t ImPlotTime, unit ImPlotTimeUnit)

@[c: 'ImPlot_RoundTime']
pub fn im_plot_round_time(p_out &ImPlotTime, t ImPlotTime, unit ImPlotTimeUnit)

@[c: 'ImPlot_CombineDateTime']
pub fn im_plot_combine_date_time(p_out &ImPlotTime, date_part ImPlotTime, time_part ImPlotTime)

@[c: 'ImPlot_Now']
pub fn im_plot_now(p_out &ImPlotTime)

@[c: 'ImPlot_Today']
pub fn im_plot_today(p_out &ImPlotTime)

@[c: 'ImPlot_FormatTime']
pub fn im_plot_format_time(t ImPlotTime, buffer &i8, size int, fmt ImPlotTimeFmt, use_24_hr_clk bool) int

@[c: 'ImPlot_FormatDate']
pub fn im_plot_format_date(t ImPlotTime, buffer &i8, size int, fmt ImPlotDateFmt, use_iso_8601 bool) int

@[c: 'ImPlot_FormatDateTime']
pub fn im_plot_format_date_time(t ImPlotTime, buffer &i8, size int, fmt ImPlotDateTimeSpec) int

@[c: 'ImPlot_ShowDatePicker']
pub fn im_plot_show_date_picker(id &i8, level &int, t &ImPlotTime, t1 &ImPlotTime, t2 &ImPlotTime) bool

@[c: 'ImPlot_ShowTimePicker']
pub fn im_plot_show_time_picker(id &i8, t &ImPlotTime) bool

@[c: 'ImPlot_TransformForward_Log10']
pub fn im_plot_transform_forward_log10(v f64, noname1 voidptr) f64

@[c: 'ImPlot_TransformInverse_Log10']
pub fn im_plot_transform_inverse_log10(v f64, noname1 voidptr) f64

@[c: 'ImPlot_TransformForward_SymLog']
pub fn im_plot_transform_forward_sym_log(v f64, noname1 voidptr) f64

@[c: 'ImPlot_TransformInverse_SymLog']
pub fn im_plot_transform_inverse_sym_log(v f64, noname1 voidptr) f64

@[c: 'ImPlot_TransformForward_Logit']
pub fn im_plot_transform_forward_logit(v f64, noname1 voidptr) f64

@[c: 'ImPlot_TransformInverse_Logit']
pub fn im_plot_transform_inverse_logit(v f64, noname1 voidptr) f64

@[c: 'ImPlot_Formatter_Default']
pub fn im_plot_formatter_default(value f64, buff &i8, size int, data voidptr) int

@[c: 'ImPlot_Formatter_Logit']
pub fn im_plot_formatter_logit(value f64, buff &i8, size int, noname1 voidptr) int

@[c: 'ImPlot_Formatter_Time']
pub fn im_plot_formatter_time(noname1 f64, buff &i8, size int, data voidptr) int

@[c: 'ImPlot_Locator_Default']
pub fn im_plot_locator_default(ticker &ImPlotTicker, range ImPlotRange, pixels f32, vertical bool, formatter ImPlotFormatter, formatter_data voidptr)

@[c: 'ImPlot_Locator_Time']
pub fn im_plot_locator_time(ticker &ImPlotTicker, range ImPlotRange, pixels f32, vertical bool, formatter ImPlotFormatter, formatter_data voidptr)

@[c: 'ImPlot_Locator_Log10']
pub fn im_plot_locator_log10(ticker &ImPlotTicker, range ImPlotRange, pixels f32, vertical bool, formatter ImPlotFormatter, formatter_data voidptr)

@[c: 'ImPlot_Locator_SymLog']
pub fn im_plot_locator_sym_log(ticker &ImPlotTicker, range ImPlotRange, pixels f32, vertical bool, formatter ImPlotFormatter, formatter_data voidptr)

// CIMGUIPLOT_INCLUDED
